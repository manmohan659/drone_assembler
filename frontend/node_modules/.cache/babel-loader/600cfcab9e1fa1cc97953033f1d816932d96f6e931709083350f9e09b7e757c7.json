{"ast":null,"code":"var _jsxFileName = \"/Users/manmohan/drone-assembly-ai/frontend/src/components/CameraFeed.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/CameraFeed.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Camera, Play, Pause, Timer, Bug as BugIcon } from 'lucide-react';\nimport SpeechHandler from './SpeechHandler';\nimport { processGeminiResponse } from '../utils/speechUtils';\nimport Logger from '../utils/logger';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CameraFeed = ({\n  currentStep,\n  onAnalysisComplete\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [autoMode, setAutoMode] = useState(false);\n  const [autoCounter, setAutoCounter] = useState(5);\n  const [debugInfo, setDebugInfo] = useState(null);\n  const [isTestingAPI, setIsTestingAPI] = useState(false);\n  const [speechText, setSpeechText] = useState('');\n  const analyzeIntervalRef = useRef(null);\n  const countdownIntervalRef = useRef(null);\n  useEffect(() => {\n    startCamera();\n    return () => {\n      stopCamera();\n      if (analyzeIntervalRef.current) clearInterval(analyzeIntervalRef.current);\n      if (countdownIntervalRef.current) clearInterval(countdownIntervalRef.current);\n    };\n  }, []);\n  const startCamera = async () => {\n    try {\n      Logger.info('Initializing camera');\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: 'environment',\n          width: {\n            ideal: 1280\n          },\n          height: {\n            ideal: 720\n          }\n        }\n      });\n      videoRef.current.srcObject = stream;\n      Logger.info('Camera initialized successfully');\n    } catch (error) {\n      Logger.error('Error accessing camera:', error);\n      setDebugInfo({\n        status: 'error',\n        message: 'Camera access denied: ' + error.message,\n        timestamp: new Date().toISOString()\n      });\n    }\n  };\n  const stopCamera = () => {\n    var _videoRef$current;\n    Logger.info('Stopping camera');\n    const stream = (_videoRef$current = videoRef.current) === null || _videoRef$current === void 0 ? void 0 : _videoRef$current.srcObject;\n    stream === null || stream === void 0 ? void 0 : stream.getTracks().forEach(track => track.stop());\n  };\n\n  // Update just the testGeminiConnection function in CameraFeed.js\n\n  const testGeminiConnection = async () => {\n    setIsTestingAPI(true);\n    try {\n      Logger.info('Testing Gemini API connection');\n      const response = await fetch(`${GEMINI_API_KEY}/api/assembly/gemini/test`);\n\n      // Log the raw response first\n      const responseText = await response.text();\n      Logger.debug('Raw Gemini test response:', responseText);\n\n      // Try to parse as JSON\n      let data;\n      try {\n        data = JSON.parse(responseText);\n      } catch (e) {\n        throw new Error(`Failed to parse response as JSON: ${responseText}`);\n      }\n      Logger.info('Gemini API test response:', data);\n      const testMessage = data.success ? 'API connection successful' : 'API connection failed';\n      setSpeechText(testMessage);\n      setDebugInfo({\n        status: data.success ? 'success' : 'error',\n        message: data.success ? data.response : data.error,\n        timestamp: new Date().toISOString()\n      });\n    } catch (error) {\n      Logger.error('Gemini API test failed:', error);\n      setSpeechText('API test failed. Please check the console for details.');\n      setDebugInfo({\n        status: 'error',\n        message: `API Test Failed: ${error.message}`,\n        timestamp: new Date().toISOString()\n      });\n    } finally {\n      setIsTestingAPI(false);\n    }\n  };\n  const captureFrame = () => {\n    Logger.debug('Capturing video frame');\n    const video = videoRef.current;\n    const canvas = document.createElement('canvas');\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext('2d');\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    return canvas.toDataURL('image/jpeg', 0.8);\n  };\n  const startAutoMode = () => {\n    Logger.info('Starting auto analysis mode');\n    setAutoMode(true);\n    analyzeIntervalRef.current = setInterval(captureAndAnalyze, 5000);\n    countdownIntervalRef.current = setInterval(() => {\n      setAutoCounter(prev => prev === 1 ? 5 : prev - 1);\n    }, 1000);\n    captureAndAnalyze();\n  };\n  const stopAutoMode = () => {\n    Logger.info('Stopping auto analysis mode');\n    setAutoMode(false);\n    if (analyzeIntervalRef.current) clearInterval(analyzeIntervalRef.current);\n    if (countdownIntervalRef.current) clearInterval(countdownIntervalRef.current);\n    setAutoCounter(5);\n  };\n  const captureAndAnalyze = async () => {\n    if (isAnalyzing) {\n      Logger.warn('Analysis already in progress, skipping');\n      return;\n    }\n    setIsAnalyzing(true);\n    try {\n      Logger.info('Starting image analysis', {\n        currentStep\n      });\n      const imageData = captureFrame();\n      const response = await fetch(`${API_BASE_URL}/api/assembly/gemini/validate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          image: imageData,\n          currentStep\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      Logger.info('Received analysis response:', data);\n      if (data.success) {\n        const speechText = processGeminiResponse(data);\n        setSpeechText(speechText);\n        onAnalysisComplete(data);\n      } else {\n        throw new Error(data.error || 'Analysis failed');\n      }\n    } catch (error) {\n      Logger.error('Analysis error:', error);\n      setSpeechText('I encountered an error while analyzing the image. Please try again.');\n      setDebugInfo({\n        status: 'error',\n        message: error.message,\n        timestamp: new Date().toISOString()\n      });\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-black/30 backdrop-blur-sm rounded-2xl p-4 border border-white/10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aspect-video bg-black/40 rounded-xl overflow-hidden relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: \"w-full h-full object-cover\",\n        autoPlay: true,\n        playsInline: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), isAnalyzing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 bg-black/50 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white\",\n          children: \"Analyzing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), autoMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-4 right-4 bg-black/70 rounded-lg px-3 py-1.5 flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          className: \"w-4 h-4 text-purple-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white\",\n          children: [\"Next scan in: \", autoCounter, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold text-white\",\n        children: \"Live Assembly View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: testGeminiConnection,\n          disabled: isTestingAPI,\n          className: \"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(BugIcon, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), isTestingAPI ? 'Testing...' : 'Test API']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: autoMode ? stopAutoMode : startAutoMode,\n          className: `${autoMode ? 'bg-red-600' : 'bg-green-600'} hover:opacity-90 text-white px-4 py-2 rounded-lg transition-colors flex items-center gap-2`,\n          children: autoMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Pause, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), \"Stop Auto\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Play, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), \"Start Auto\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: captureAndAnalyze,\n          disabled: isAnalyzing || autoMode,\n          className: `bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg transition-colors flex items-center gap-2 ${isAnalyzing || autoMode ? 'opacity-50 cursor-not-allowed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(Camera, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), \"Analyze\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mt-4 p-4 rounded-lg ${debugInfo.status === 'success' ? 'bg-green-900/20' : 'bg-red-900/20'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-white font-medium\",\n          children: \"Debug Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-400\",\n          children: debugInfo.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"mt-2 text-sm font-mono whitespace-pre-wrap text-gray-200\",\n        children: debugInfo.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SpeechHandler, {\n      text: speechText,\n      onSpeechEnd: () => Logger.info('Speech synthesis completed')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraFeed, \"9i5iEWcIljWZioJG2T+6ygiVU6o=\");\n_c = CameraFeed;\nexport default CameraFeed;\nvar _c;\n$RefreshReg$(_c, \"CameraFeed\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Camera","Play","Pause","Timer","Bug","BugIcon","SpeechHandler","processGeminiResponse","Logger","jsxDEV","_jsxDEV","Fragment","_Fragment","CameraFeed","currentStep","onAnalysisComplete","_s","videoRef","isAnalyzing","setIsAnalyzing","autoMode","setAutoMode","autoCounter","setAutoCounter","debugInfo","setDebugInfo","isTestingAPI","setIsTestingAPI","speechText","setSpeechText","analyzeIntervalRef","countdownIntervalRef","startCamera","stopCamera","current","clearInterval","info","stream","navigator","mediaDevices","getUserMedia","video","facingMode","width","ideal","height","srcObject","error","status","message","timestamp","Date","toISOString","_videoRef$current","getTracks","forEach","track","stop","testGeminiConnection","response","fetch","GEMINI_API_KEY","responseText","text","debug","data","JSON","parse","e","Error","testMessage","success","captureFrame","canvas","document","createElement","videoWidth","videoHeight","context","getContext","drawImage","toDataURL","startAutoMode","setInterval","captureAndAnalyze","prev","stopAutoMode","warn","imageData","API_BASE_URL","method","headers","body","stringify","image","ok","json","className","children","ref","autoPlay","playsInline","muted","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onSpeechEnd","_c","$RefreshReg$"],"sources":["/Users/manmohan/drone-assembly-ai/frontend/src/components/CameraFeed.js"],"sourcesContent":["// frontend/src/components/CameraFeed.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Camera, Play, Pause, Timer, Bug as BugIcon } from 'lucide-react';\nimport SpeechHandler from './SpeechHandler';\nimport { processGeminiResponse } from '../utils/speechUtils';\nimport Logger from '../utils/logger';\n\nconst CameraFeed = ({ currentStep, onAnalysisComplete }) => {\n  const videoRef = useRef(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [autoMode, setAutoMode] = useState(false);\n  const [autoCounter, setAutoCounter] = useState(5);\n  const [debugInfo, setDebugInfo] = useState(null);\n  const [isTestingAPI, setIsTestingAPI] = useState(false);\n  const [speechText, setSpeechText] = useState('');\n  const analyzeIntervalRef = useRef(null);\n  const countdownIntervalRef = useRef(null);\n\n  useEffect(() => {\n    startCamera();\n    return () => {\n      stopCamera();\n      if (analyzeIntervalRef.current) clearInterval(analyzeIntervalRef.current);\n      if (countdownIntervalRef.current) clearInterval(countdownIntervalRef.current);\n    };\n  }, []);\n\n  const startCamera = async () => {\n    try {\n      Logger.info('Initializing camera');\n      const stream = await navigator.mediaDevices.getUserMedia({ \n        video: { \n          facingMode: 'environment',\n          width: { ideal: 1280 },\n          height: { ideal: 720 }\n        } \n      });\n      videoRef.current.srcObject = stream;\n      Logger.info('Camera initialized successfully');\n    } catch (error) {\n      Logger.error('Error accessing camera:', error);\n      setDebugInfo({\n        status: 'error',\n        message: 'Camera access denied: ' + error.message,\n        timestamp: new Date().toISOString()\n      });\n    }\n  };\n\n  const stopCamera = () => {\n    Logger.info('Stopping camera');\n    const stream = videoRef.current?.srcObject;\n    stream?.getTracks().forEach(track => track.stop());\n  };\n\n// Update just the testGeminiConnection function in CameraFeed.js\n\nconst testGeminiConnection = async () => {\n    setIsTestingAPI(true);\n    try {\n      Logger.info('Testing Gemini API connection');\n      \n      const response = await fetch(`${GEMINI_API_KEY}/api/assembly/gemini/test`);\n      \n      // Log the raw response first\n      const responseText = await response.text();\n      Logger.debug('Raw Gemini test response:', responseText);\n\n      // Try to parse as JSON\n      let data;\n      try {\n        data = JSON.parse(responseText);\n      } catch (e) {\n        throw new Error(`Failed to parse response as JSON: ${responseText}`);\n      }\n\n      Logger.info('Gemini API test response:', data);\n      \n      const testMessage = data.success ? 'API connection successful' : 'API connection failed';\n      setSpeechText(testMessage);\n      \n      setDebugInfo({\n        status: data.success ? 'success' : 'error',\n        message: data.success ? data.response : data.error,\n        timestamp: new Date().toISOString()\n      });\n    } catch (error) {\n      Logger.error('Gemini API test failed:', error);\n      setSpeechText('API test failed. Please check the console for details.');\n      setDebugInfo({\n        status: 'error',\n        message: `API Test Failed: ${error.message}`,\n        timestamp: new Date().toISOString()\n      });\n    } finally {\n      setIsTestingAPI(false);\n    }\n  };\n  \n  const captureFrame = () => {\n    Logger.debug('Capturing video frame');\n    const video = videoRef.current;\n    const canvas = document.createElement('canvas');\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext('2d');\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    return canvas.toDataURL('image/jpeg', 0.8);\n  };\n\n  const startAutoMode = () => {\n    Logger.info('Starting auto analysis mode');\n    setAutoMode(true);\n    analyzeIntervalRef.current = setInterval(captureAndAnalyze, 5000);\n    countdownIntervalRef.current = setInterval(() => {\n      setAutoCounter((prev) => (prev === 1 ? 5 : prev - 1));\n    }, 1000);\n    captureAndAnalyze();\n  };\n\n  const stopAutoMode = () => {\n    Logger.info('Stopping auto analysis mode');\n    setAutoMode(false);\n    if (analyzeIntervalRef.current) clearInterval(analyzeIntervalRef.current);\n    if (countdownIntervalRef.current) clearInterval(countdownIntervalRef.current);\n    setAutoCounter(5);\n  };\n\n  const captureAndAnalyze = async () => {\n    if (isAnalyzing) {\n      Logger.warn('Analysis already in progress, skipping');\n      return;\n    }\n    \n    setIsAnalyzing(true);\n    try {\n      Logger.info('Starting image analysis', { currentStep });\n      const imageData = captureFrame();\n      \n      const response = await fetch(`${API_BASE_URL}/api/assembly/gemini/validate`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          image: imageData,\n          currentStep\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      Logger.info('Received analysis response:', data);\n      \n      if (data.success) {\n        const speechText = processGeminiResponse(data);\n        setSpeechText(speechText);\n        onAnalysisComplete(data);\n      } else {\n        throw new Error(data.error || 'Analysis failed');\n      }\n\n    } catch (error) {\n      Logger.error('Analysis error:', error);\n      setSpeechText('I encountered an error while analyzing the image. Please try again.');\n      setDebugInfo({\n        status: 'error',\n        message: error.message,\n        timestamp: new Date().toISOString()\n      });\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-black/30 backdrop-blur-sm rounded-2xl p-4 border border-white/10\">\n      <div className=\"aspect-video bg-black/40 rounded-xl overflow-hidden relative\">\n        <video \n          ref={videoRef} \n          className=\"w-full h-full object-cover\" \n          autoPlay \n          playsInline \n          muted \n        />\n        {isAnalyzing && (\n          <div className=\"absolute inset-0 bg-black/50 flex items-center justify-center\">\n            <div className=\"text-white\">Analyzing...</div>\n          </div>\n        )}\n        \n        {autoMode && (\n          <div className=\"absolute top-4 right-4 bg-black/70 rounded-lg px-3 py-1.5 flex items-center gap-2\">\n            <Timer className=\"w-4 h-4 text-purple-400\" />\n            <span className=\"text-white\">Next scan in: {autoCounter}s</span>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"mt-4 flex justify-between items-center\">\n        <h2 className=\"text-lg font-semibold text-white\">Live Assembly View</h2>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={testGeminiConnection}\n            disabled={isTestingAPI}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors flex items-center gap-2\"\n          >\n            <BugIcon className=\"w-4 h-4\" />\n            {isTestingAPI ? 'Testing...' : 'Test API'}\n          </button>\n\n          <button\n            onClick={autoMode ? stopAutoMode : startAutoMode}\n            className={`${\n              autoMode ? 'bg-red-600' : 'bg-green-600'\n            } hover:opacity-90 text-white px-4 py-2 rounded-lg transition-colors flex items-center gap-2`}\n          >\n            {autoMode ? (\n              <>\n                <Pause className=\"w-4 h-4\" />\n                Stop Auto\n              </>\n            ) : (\n              <>\n                <Play className=\"w-4 h-4\" />\n                Start Auto\n              </>\n            )}\n          </button>\n          \n          <button\n            onClick={captureAndAnalyze}\n            disabled={isAnalyzing || autoMode}\n            className={`bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg transition-colors flex items-center gap-2 ${\n              (isAnalyzing || autoMode) ? 'opacity-50 cursor-not-allowed' : ''\n            }`}\n          >\n            <Camera className=\"w-4 h-4\" />\n            Analyze\n          </button>\n        </div>\n      </div>\n\n      {debugInfo && (\n        <div className={`mt-4 p-4 rounded-lg ${\n          debugInfo.status === 'success' ? 'bg-green-900/20' : 'bg-red-900/20'\n        }`}>\n          <div className=\"flex justify-between items-start\">\n            <h3 className=\"text-white font-medium\">Debug Info</h3>\n            <span className=\"text-xs text-gray-400\">{debugInfo.timestamp}</span>\n          </div>\n          <pre className=\"mt-2 text-sm font-mono whitespace-pre-wrap text-gray-200\">\n            {debugInfo.message}\n          </pre>\n        </div>\n      )}\n\n      <SpeechHandler \n        text={speechText}\n        onSpeechEnd={() => Logger.info('Speech synthesis completed')}\n      />\n    </div>\n  );\n};\n\nexport default CameraFeed;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,GAAG,IAAIC,OAAO,QAAQ,cAAc;AACzE,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,qBAAqB,QAAQ,sBAAsB;AAC5D,OAAOC,MAAM,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAMC,QAAQ,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC2B,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC6B,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM+B,kBAAkB,GAAGhC,MAAM,CAAC,IAAI,CAAC;EACvC,MAAMiC,oBAAoB,GAAGjC,MAAM,CAAC,IAAI,CAAC;EAEzCD,SAAS,CAAC,MAAM;IACdmC,WAAW,CAAC,CAAC;IACb,OAAO,MAAM;MACXC,UAAU,CAAC,CAAC;MACZ,IAAIH,kBAAkB,CAACI,OAAO,EAAEC,aAAa,CAACL,kBAAkB,CAACI,OAAO,CAAC;MACzE,IAAIH,oBAAoB,CAACG,OAAO,EAAEC,aAAa,CAACJ,oBAAoB,CAACG,OAAO,CAAC;IAC/E,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMF,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACFxB,MAAM,CAAC4B,IAAI,CAAC,qBAAqB,CAAC;MAClC,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QACvDC,KAAK,EAAE;UACLC,UAAU,EAAE,aAAa;UACzBC,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAK,CAAC;UACtBC,MAAM,EAAE;YAAED,KAAK,EAAE;UAAI;QACvB;MACF,CAAC,CAAC;MACF3B,QAAQ,CAACiB,OAAO,CAACY,SAAS,GAAGT,MAAM;MACnC7B,MAAM,CAAC4B,IAAI,CAAC,iCAAiC,CAAC;IAChD,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdvC,MAAM,CAACuC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC9CtB,YAAY,CAAC;QACXuB,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE,wBAAwB,GAAGF,KAAK,CAACE,OAAO;QACjDC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMnB,UAAU,GAAGA,CAAA,KAAM;IAAA,IAAAoB,iBAAA;IACvB7C,MAAM,CAAC4B,IAAI,CAAC,iBAAiB,CAAC;IAC9B,MAAMC,MAAM,IAAAgB,iBAAA,GAAGpC,QAAQ,CAACiB,OAAO,cAAAmB,iBAAA,uBAAhBA,iBAAA,CAAkBP,SAAS;IAC1CT,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEiB,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;EACpD,CAAC;;EAEH;;EAEA,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC/B,eAAe,CAAC,IAAI,CAAC;IACrB,IAAI;MACFnB,MAAM,CAAC4B,IAAI,CAAC,+BAA+B,CAAC;MAE5C,MAAMuB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,cAAc,2BAA2B,CAAC;;MAE1E;MACA,MAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAC1CvD,MAAM,CAACwD,KAAK,CAAC,2BAA2B,EAAEF,YAAY,CAAC;;MAEvD;MACA,IAAIG,IAAI;MACR,IAAI;QACFA,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC;MACjC,CAAC,CAAC,OAAOM,CAAC,EAAE;QACV,MAAM,IAAIC,KAAK,CAAC,qCAAqCP,YAAY,EAAE,CAAC;MACtE;MAEAtD,MAAM,CAAC4B,IAAI,CAAC,2BAA2B,EAAE6B,IAAI,CAAC;MAE9C,MAAMK,WAAW,GAAGL,IAAI,CAACM,OAAO,GAAG,2BAA2B,GAAG,uBAAuB;MACxF1C,aAAa,CAACyC,WAAW,CAAC;MAE1B7C,YAAY,CAAC;QACXuB,MAAM,EAAEiB,IAAI,CAACM,OAAO,GAAG,SAAS,GAAG,OAAO;QAC1CtB,OAAO,EAAEgB,IAAI,CAACM,OAAO,GAAGN,IAAI,CAACN,QAAQ,GAAGM,IAAI,CAAClB,KAAK;QAClDG,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdvC,MAAM,CAACuC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC9ClB,aAAa,CAAC,wDAAwD,CAAC;MACvEJ,YAAY,CAAC;QACXuB,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE,oBAAoBF,KAAK,CAACE,OAAO,EAAE;QAC5CC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC,CAAC;IACJ,CAAC,SAAS;MACRzB,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAM6C,YAAY,GAAGA,CAAA,KAAM;IACzBhE,MAAM,CAACwD,KAAK,CAAC,uBAAuB,CAAC;IACrC,MAAMvB,KAAK,GAAGxB,QAAQ,CAACiB,OAAO;IAC9B,MAAMuC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAAC9B,KAAK,GAAGF,KAAK,CAACmC,UAAU;IAC/BH,MAAM,CAAC5B,MAAM,GAAGJ,KAAK,CAACoC,WAAW;IACjC,MAAMC,OAAO,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;IACvCD,OAAO,CAACE,SAAS,CAACvC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEgC,MAAM,CAAC9B,KAAK,EAAE8B,MAAM,CAAC5B,MAAM,CAAC;IAC3D,OAAO4B,MAAM,CAACQ,SAAS,CAAC,YAAY,EAAE,GAAG,CAAC;EAC5C,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B1E,MAAM,CAAC4B,IAAI,CAAC,6BAA6B,CAAC;IAC1Cf,WAAW,CAAC,IAAI,CAAC;IACjBS,kBAAkB,CAACI,OAAO,GAAGiD,WAAW,CAACC,iBAAiB,EAAE,IAAI,CAAC;IACjErD,oBAAoB,CAACG,OAAO,GAAGiD,WAAW,CAAC,MAAM;MAC/C5D,cAAc,CAAE8D,IAAI,IAAMA,IAAI,KAAK,CAAC,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAE,CAAC;IACvD,CAAC,EAAE,IAAI,CAAC;IACRD,iBAAiB,CAAC,CAAC;EACrB,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB9E,MAAM,CAAC4B,IAAI,CAAC,6BAA6B,CAAC;IAC1Cf,WAAW,CAAC,KAAK,CAAC;IAClB,IAAIS,kBAAkB,CAACI,OAAO,EAAEC,aAAa,CAACL,kBAAkB,CAACI,OAAO,CAAC;IACzE,IAAIH,oBAAoB,CAACG,OAAO,EAAEC,aAAa,CAACJ,oBAAoB,CAACG,OAAO,CAAC;IAC7EX,cAAc,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,MAAM6D,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIlE,WAAW,EAAE;MACfV,MAAM,CAAC+E,IAAI,CAAC,wCAAwC,CAAC;MACrD;IACF;IAEApE,cAAc,CAAC,IAAI,CAAC;IACpB,IAAI;MACFX,MAAM,CAAC4B,IAAI,CAAC,yBAAyB,EAAE;QAAEtB;MAAY,CAAC,CAAC;MACvD,MAAM0E,SAAS,GAAGhB,YAAY,CAAC,CAAC;MAEhC,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG6B,YAAY,+BAA+B,EAAE;QAC3EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAE1B,IAAI,CAAC2B,SAAS,CAAC;UACnBC,KAAK,EAAEN,SAAS;UAChB1E;QACF,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAAC6C,QAAQ,CAACoC,EAAE,EAAE;QAChB,MAAM,IAAI1B,KAAK,CAAC,uBAAuBV,QAAQ,CAACX,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMiB,IAAI,GAAG,MAAMN,QAAQ,CAACqC,IAAI,CAAC,CAAC;MAClCxF,MAAM,CAAC4B,IAAI,CAAC,6BAA6B,EAAE6B,IAAI,CAAC;MAEhD,IAAIA,IAAI,CAACM,OAAO,EAAE;QAChB,MAAM3C,UAAU,GAAGrB,qBAAqB,CAAC0D,IAAI,CAAC;QAC9CpC,aAAa,CAACD,UAAU,CAAC;QACzBb,kBAAkB,CAACkD,IAAI,CAAC;MAC1B,CAAC,MAAM;QACL,MAAM,IAAII,KAAK,CAACJ,IAAI,CAAClB,KAAK,IAAI,iBAAiB,CAAC;MAClD;IAEF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdvC,MAAM,CAACuC,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACtClB,aAAa,CAAC,qEAAqE,CAAC;MACpFJ,YAAY,CAAC;QACXuB,MAAM,EAAE,OAAO;QACfC,OAAO,EAAEF,KAAK,CAACE,OAAO;QACtBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC,CAAC;IACJ,CAAC,SAAS;MACRjC,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,oBACET,OAAA;IAAKuF,SAAS,EAAC,qEAAqE;IAAAC,QAAA,gBAClFxF,OAAA;MAAKuF,SAAS,EAAC,8DAA8D;MAAAC,QAAA,gBAC3ExF,OAAA;QACEyF,GAAG,EAAElF,QAAS;QACdgF,SAAS,EAAC,4BAA4B;QACtCG,QAAQ;QACRC,WAAW;QACXC,KAAK;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACDxF,WAAW,iBACVR,OAAA;QAAKuF,SAAS,EAAC,+DAA+D;QAAAC,QAAA,eAC5ExF,OAAA;UAAKuF,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAY;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CACN,EAEAtF,QAAQ,iBACPV,OAAA;QAAKuF,SAAS,EAAC,mFAAmF;QAAAC,QAAA,gBAChGxF,OAAA,CAACP,KAAK;UAAC8F,SAAS,EAAC;QAAyB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7ChG,OAAA;UAAMuF,SAAS,EAAC,YAAY;UAAAC,QAAA,GAAC,gBAAc,EAAC5E,WAAW,EAAC,GAAC;QAAA;UAAAiF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENhG,OAAA;MAAKuF,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACrDxF,OAAA;QAAIuF,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAC;MAAkB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxEhG,OAAA;QAAKuF,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBxF,OAAA;UACEiG,OAAO,EAAEjD,oBAAqB;UAC9BkD,QAAQ,EAAElF,YAAa;UACvBuE,SAAS,EAAC,yGAAyG;UAAAC,QAAA,gBAEnHxF,OAAA,CAACL,OAAO;YAAC4F,SAAS,EAAC;UAAS;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAC9BhF,YAAY,GAAG,YAAY,GAAG,UAAU;QAAA;UAAA6E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eAEThG,OAAA;UACEiG,OAAO,EAAEvF,QAAQ,GAAGkE,YAAY,GAAGJ,aAAc;UACjDe,SAAS,EAAE,GACT7E,QAAQ,GAAG,YAAY,GAAG,cAAc,6FACoD;UAAA8E,QAAA,EAE7F9E,QAAQ,gBACPV,OAAA,CAAAE,SAAA;YAAAsF,QAAA,gBACExF,OAAA,CAACR,KAAK;cAAC+F,SAAS,EAAC;YAAS;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,aAE/B;UAAA,eAAE,CAAC,gBAEHhG,OAAA,CAAAE,SAAA;YAAAsF,QAAA,gBACExF,OAAA,CAACT,IAAI;cAACgG,SAAS,EAAC;YAAS;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,cAE9B;UAAA,eAAE;QACH;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC,eAEThG,OAAA;UACEiG,OAAO,EAAEvB,iBAAkB;UAC3BwB,QAAQ,EAAE1F,WAAW,IAAIE,QAAS;UAClC6E,SAAS,EAAE,+GACR/E,WAAW,IAAIE,QAAQ,GAAI,+BAA+B,GAAG,EAAE,EAC/D;UAAA8E,QAAA,gBAEHxF,OAAA,CAACV,MAAM;YAACiG,SAAS,EAAC;UAAS;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,WAEhC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELlF,SAAS,iBACRd,OAAA;MAAKuF,SAAS,EAAE,uBACdzE,SAAS,CAACwB,MAAM,KAAK,SAAS,GAAG,iBAAiB,GAAG,eAAe,EACnE;MAAAkD,QAAA,gBACDxF,OAAA;QAAKuF,SAAS,EAAC,kCAAkC;QAAAC,QAAA,gBAC/CxF,OAAA;UAAIuF,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EAAC;QAAU;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtDhG,OAAA;UAAMuF,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAE1E,SAAS,CAAC0B;QAAS;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eACNhG,OAAA;QAAKuF,SAAS,EAAC,0DAA0D;QAAAC,QAAA,EACtE1E,SAAS,CAACyB;MAAO;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAEDhG,OAAA,CAACJ,aAAa;MACZyD,IAAI,EAAEnC,UAAW;MACjBiF,WAAW,EAAEA,CAAA,KAAMrG,MAAM,CAAC4B,IAAI,CAAC,4BAA4B;IAAE;MAAAmE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1F,EAAA,CAjQIH,UAAU;AAAAiG,EAAA,GAAVjG,UAAU;AAmQhB,eAAeA,UAAU;AAAC,IAAAiG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}