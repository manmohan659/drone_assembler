{"ast":null,"code":"var _s = $RefreshSig$();\n// frontend/src/components/SpeechHandler.js\nimport React, { useEffect, useCallback } from 'react';\nconst SpeechHandler = ({\n  text,\n  onSpeechEnd,\n  autoSpeak = true\n}) => {\n  _s();\n  const speak = useCallback(text => {\n    // Cancel any ongoing speech\n    window.speechSynthesis.cancel();\n    const utterance = new SpeechSynthesisUtterance(text);\n\n    // Log the speech start\n    console.log('Starting speech synthesis:', {\n      text\n    });\n    utterance.onend = () => {\n      console.log('Speech synthesis completed');\n      if (onSpeechEnd) onSpeechEnd();\n    };\n    utterance.onerror = error => {\n      console.error('Speech synthesis error:', error);\n    };\n    window.speechSynthesis.speak(utterance);\n  }, [onSpeechEnd]);\n  useEffect(() => {\n    if (autoSpeak && text) {\n      speak(text);\n    }\n  }, [text, autoSpeak, speak]);\n  return null; // This is a non-visual component\n};\n_s(SpeechHandler, \"keiNL/YxH3ny6bq30yRTktUG5QE=\");\n_c = SpeechHandler;\nexport default SpeechHandler;\nvar _c;\n$RefreshReg$(_c, \"SpeechHandler\");","map":{"version":3,"names":["React","useEffect","useCallback","SpeechHandler","text","onSpeechEnd","autoSpeak","_s","speak","window","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","console","log","onend","onerror","error","_c","$RefreshReg$"],"sources":["/Users/manmohan/drone-assembly-ai/frontend/src/components/SpeechHandler.js"],"sourcesContent":["// frontend/src/components/SpeechHandler.js\nimport React, { useEffect, useCallback } from 'react';\n\nconst SpeechHandler = ({ text, onSpeechEnd, autoSpeak = true }) => {\n  const speak = useCallback((text) => {\n    // Cancel any ongoing speech\n    window.speechSynthesis.cancel();\n\n    const utterance = new SpeechSynthesisUtterance(text);\n    \n    // Log the speech start\n    console.log('Starting speech synthesis:', { text });\n    \n    utterance.onend = () => {\n      console.log('Speech synthesis completed');\n      if (onSpeechEnd) onSpeechEnd();\n    };\n\n    utterance.onerror = (error) => {\n      console.error('Speech synthesis error:', error);\n    };\n\n    window.speechSynthesis.speak(utterance);\n  }, [onSpeechEnd]);\n\n  useEffect(() => {\n    if (autoSpeak && text) {\n      speak(text);\n    }\n  }, [text, autoSpeak, speak]);\n\n  return null; // This is a non-visual component\n};\n\nexport default SpeechHandler;"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAErD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,IAAI;EAAEC,WAAW;EAAEC,SAAS,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAMC,KAAK,GAAGN,WAAW,CAAEE,IAAI,IAAK;IAClC;IACAK,MAAM,CAACC,eAAe,CAACC,MAAM,CAAC,CAAC;IAE/B,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACT,IAAI,CAAC;;IAEpD;IACAU,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE;MAAEX;IAAK,CAAC,CAAC;IAEnDQ,SAAS,CAACI,KAAK,GAAG,MAAM;MACtBF,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC,IAAIV,WAAW,EAAEA,WAAW,CAAC,CAAC;IAChC,CAAC;IAEDO,SAAS,CAACK,OAAO,GAAIC,KAAK,IAAK;MAC7BJ,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC;IAEDT,MAAM,CAACC,eAAe,CAACF,KAAK,CAACI,SAAS,CAAC;EACzC,CAAC,EAAE,CAACP,WAAW,CAAC,CAAC;EAEjBJ,SAAS,CAAC,MAAM;IACd,IAAIK,SAAS,IAAIF,IAAI,EAAE;MACrBI,KAAK,CAACJ,IAAI,CAAC;IACb;EACF,CAAC,EAAE,CAACA,IAAI,EAAEE,SAAS,EAAEE,KAAK,CAAC,CAAC;EAE5B,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAACD,EAAA,CA7BIJ,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AA+BnB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}