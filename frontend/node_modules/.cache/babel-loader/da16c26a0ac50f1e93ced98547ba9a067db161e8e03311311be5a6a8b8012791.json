{"ast":null,"code":"var _jsxFileName = \"/Users/manmohan/drone-assembly-ai/frontend/src/components/MainInterface.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/MainInterface.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Clock, MessageSquare, Folder, ArrowLeftRight } from 'lucide-react';\nimport CameraFeed from './CameraFeed';\nimport InstructionPanel from './InstructionPanel';\nimport VisualizationPanel from './VisualizationPanel';\nimport VoiceInput from './VoiceInput';\nimport ProjectManager from './ProjectManager';\nimport NewUserOnboarding from './NewUserOnboarding';\nimport Logger from '../utils/logger';\nimport { processGeminiResponse } from '../utils/speechUtils';\nimport { getUserId, getProjectId } from '../utils/userIdentification';\nimport { useProject } from '../contexts/ProjectContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainInterface = () => {\n  _s();\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingStatus, setProcessingStatus] = useState(null);\n  const [showProjectManager, setShowProjectManager] = useState(false);\n  const [showOnboarding, setShowOnboarding] = useState(false);\n  const cameraFeedRef = useRef();\n\n  // Get project context\n  const {\n    currentProject,\n    isLoading: projectLoading,\n    loadActiveProject,\n    setActiveProject,\n    addComponents,\n    addCompletedStep\n  } = useProject();\n\n  // Check for existing project on mount\n  useEffect(() => {\n    const projectId = getProjectId();\n    if (!projectId) {\n      // No existing project, show onboarding\n      setShowOnboarding(true);\n    }\n  }, []);\n\n  // Get current step from project\n  const currentStep = (currentProject === null || currentProject === void 0 ? void 0 : currentProject.current_step) || 1;\n\n  // Handle completed analysis\n  const handleAnalysisComplete = result => {\n    var _result$analysis, _result$analysis2, _result$analysis5;\n    setAnalysisResult(result);\n\n    // Log the result to see what components are being identified\n    Logger.info('Analysis completed', {\n      hasData: !!result,\n      hasAnalysis: !!(result !== null && result !== void 0 && result.analysis),\n      identifiedComponents: !!(result !== null && result !== void 0 && (_result$analysis = result.analysis) !== null && _result$analysis !== void 0 && _result$analysis.identifiedComponents),\n      identifiedParts: !!(result !== null && result !== void 0 && (_result$analysis2 = result.analysis) !== null && _result$analysis2 !== void 0 && _result$analysis2.identifiedParts)\n    });\n\n    // If we have project context and identified components, store them\n    if (currentProject) {\n      var _result$analysis3, _result$analysis4;\n      // Handle different response formats\n      let componentsToStore = [];\n      if (result !== null && result !== void 0 && (_result$analysis3 = result.analysis) !== null && _result$analysis3 !== void 0 && _result$analysis3.identifiedComponents && Array.isArray(result.analysis.identifiedComponents)) {\n        componentsToStore = result.analysis.identifiedComponents;\n      } else if (result !== null && result !== void 0 && (_result$analysis4 = result.analysis) !== null && _result$analysis4 !== void 0 && _result$analysis4.identifiedParts && Array.isArray(result.analysis.identifiedParts)) {\n        componentsToStore = result.analysis.identifiedParts;\n      }\n      if (componentsToStore.length > 0) {\n        Logger.info('Found components to store', {\n          count: componentsToStore.length\n        });\n        storeIdentifiedComponents(componentsToStore);\n      }\n    }\n\n    // If analysis indicates we can proceed to next step\n    if (result !== null && result !== void 0 && (_result$analysis5 = result.analysis) !== null && _result$analysis5 !== void 0 && _result$analysis5.canProceed) {\n      const stepInfo = {\n        stepNumber: currentStep,\n        title: `Step ${currentStep} completed`,\n        timestamp: new Date().toISOString(),\n        details: result.analysis.feedback || 'Step completed successfully'\n      };\n\n      // Store the completed step\n      addCompletedStep(stepInfo);\n    }\n  };\n\n  // Store identified components\n  const storeIdentifiedComponents = async components => {\n    if (!components || !Array.isArray(components) || components.length === 0) return;\n    try {\n      Logger.info('Storing identified components', {\n        count: components.length\n      });\n      await addComponents(components);\n    } catch (error) {\n      Logger.error('Error storing components', error);\n    }\n  };\n\n  // Handle voice input\n  const handleVoiceInput = async (transcript, statusCallback) => {\n    if (!cameraFeedRef.current) {\n      Logger.error('Camera feed not initialized');\n      statusCallback('Error: Camera not ready');\n      return;\n    }\n    setIsProcessing(true);\n    Logger.info('Processing voice input:', transcript);\n    setProcessingStatus('Capturing image...');\n    try {\n      var _data$analysis;\n      // Get current frame from camera\n      const imageData = cameraFeedRef.current.captureFrame();\n      if (!imageData) {\n        throw new Error('Failed to capture camera frame');\n      }\n      Logger.info('Image captured successfully');\n      setProcessingStatus('Image captured ✅ Sending to API...');\n      statusCallback('Image captured ✅ Sending to API...');\n\n      // Get user and project IDs\n      const userId = getUserId();\n      const projectId = getProjectId();\n\n      // Send to backend with detailed logging\n      Logger.info('Sending voice query to backend', {\n        step: currentStep,\n        query: transcript,\n        imageSize: imageData.length,\n        userId,\n        projectId\n      });\n      const response = await fetch('http://localhost:5003/api/assembly/gemini/voice-query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          image: imageData,\n          query: transcript,\n          currentStep,\n          userId,\n          projectId\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      Logger.info('Voice query response received', {\n        success: data.success,\n        status: (_data$analysis = data.analysis) === null || _data$analysis === void 0 ? void 0 : _data$analysis.status,\n        hasContext: data.hasContext\n      });\n      setProcessingStatus('Response received ✅');\n      statusCallback('Response received ✅');\n      if (data.success) {\n        var _data$analysis2;\n        // Update the analysis result\n        setAnalysisResult(data);\n\n        // If we have identified components, store them\n        if ((_data$analysis2 = data.analysis) !== null && _data$analysis2 !== void 0 && _data$analysis2.identifiedComponents) {\n          storeIdentifiedComponents(data.analysis.identifiedComponents);\n        }\n\n        // Process the response for speech\n        const processedResponse = processGeminiResponse(data);\n        Logger.info('Processing voice response for speech:', {\n          text: processedResponse.slice(0, 100) + (processedResponse.length > 100 ? '...' : '')\n        });\n\n        // Set speech text on CameraFeed\n        if (cameraFeedRef.current && typeof cameraFeedRef.current.setSpeechText === 'function') {\n          // Use a slight delay to ensure state updates don't conflict\n          setTimeout(() => {\n            cameraFeedRef.current.setSpeechText(processedResponse);\n          }, 100);\n        }\n      } else {\n        throw new Error(data.error || 'Voice query failed');\n      }\n    } catch (error) {\n      Logger.error('Voice query error:', error);\n      setProcessingStatus('Error processing request ❌');\n      statusCallback('Error processing request ❌');\n\n      // Set error message for speech\n      if (cameraFeedRef.current && typeof cameraFeedRef.current.setSpeechText === 'function') {\n        cameraFeedRef.current.setSpeechText('I encountered an error processing your question. Please try again.');\n      }\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Handle project selection\n  const handleProjectSelect = project => {\n    setActiveProject(project);\n    setShowProjectManager(false);\n  };\n\n  // Handle onboarding completion\n  const handleOnboardingComplete = () => {\n    setShowOnboarding(false);\n    loadActiveProject();\n  };\n\n  // Toggle project manager\n  const toggleProjectManager = () => {\n    setShowProjectManager(!showProjectManager);\n  };\n\n  // Render content based on state\n  const renderContent = () => {\n    if (showOnboarding) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4 py-8\",\n        children: /*#__PURE__*/_jsxDEV(NewUserOnboarding, {\n          onComplete: handleOnboardingComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this);\n    }\n    if (projectLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4 py-8 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mx-auto px-4 py-6\",\n      children: showProjectManager ? /*#__PURE__*/_jsxDEV(ProjectManager, {\n        onProjectSelect: handleProjectSelect,\n        onNewProject: handleProjectSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-12 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-12 lg:col-span-8\",\n          children: [/*#__PURE__*/_jsxDEV(CameraFeed, {\n            ref: cameraFeedRef,\n            currentStep: currentStep,\n            onAnalysisComplete: handleAnalysisComplete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), processingStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 bg-black/50 text-white p-4 rounded-xl\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-3 h-3 bg-green-500 rounded-full animate-pulse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: processingStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-12 lg:col-span-4 space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(InstructionPanel, {\n            currentStep: currentStep,\n            analysis: analysisResult === null || analysisResult === void 0 ? void 0 : analysisResult.analysis,\n            project: currentProject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VisualizationPanel, {\n            components: (currentProject === null || currentProject === void 0 ? void 0 : currentProject.components) || []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-indigo-800\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"border-b border-white/10 backdrop-blur-md bg-black/20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4 py-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-white\",\n            children: (currentProject === null || currentProject === void 0 ? void 0 : currentProject.project_name) || 'Drone Assembly'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleProjectManager,\n              className: \"text-indigo-200 hover:text-white transition-colors\",\n              title: \"Projects\",\n              children: /*#__PURE__*/_jsxDEV(Folder, {\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-indigo-200 hover:text-white transition-colors\",\n              title: \"History\",\n              children: /*#__PURE__*/_jsxDEV(Clock, {\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-indigo-200 hover:text-white transition-colors\",\n              title: \"Chat\",\n              children: /*#__PURE__*/_jsxDEV(MessageSquare, {\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), renderContent(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-6 right-6 flex flex-col gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(VoiceInput, {\n        onVoiceInput: handleVoiceInput,\n        disabled: isProcessing || showProjectManager || showOnboarding\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-14 h-14 bg-indigo-600 hover:bg-indigo-700 rounded-full flex items-center justify-center text-white shadow-lg transition-colors\",\n        onClick: toggleProjectManager,\n        title: showProjectManager ? \"Back to Assembly\" : \"Switch Project\",\n        children: /*#__PURE__*/_jsxDEV(ArrowLeftRight, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n};\n_s(MainInterface, \"FBZ68wzzkRrc7ly1nE2CpFO3AOw=\", false, function () {\n  return [useProject];\n});\n_c = MainInterface;\nexport default MainInterface;\nvar _c;\n$RefreshReg$(_c, \"MainInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Clock","MessageSquare","Folder","ArrowLeftRight","CameraFeed","InstructionPanel","VisualizationPanel","VoiceInput","ProjectManager","NewUserOnboarding","Logger","processGeminiResponse","getUserId","getProjectId","useProject","jsxDEV","_jsxDEV","MainInterface","_s","analysisResult","setAnalysisResult","isProcessing","setIsProcessing","processingStatus","setProcessingStatus","showProjectManager","setShowProjectManager","showOnboarding","setShowOnboarding","cameraFeedRef","currentProject","isLoading","projectLoading","loadActiveProject","setActiveProject","addComponents","addCompletedStep","projectId","currentStep","current_step","handleAnalysisComplete","result","_result$analysis","_result$analysis2","_result$analysis5","info","hasData","hasAnalysis","analysis","identifiedComponents","identifiedParts","_result$analysis3","_result$analysis4","componentsToStore","Array","isArray","length","count","storeIdentifiedComponents","canProceed","stepInfo","stepNumber","title","timestamp","Date","toISOString","details","feedback","components","error","handleVoiceInput","transcript","statusCallback","current","_data$analysis","imageData","captureFrame","Error","userId","step","query","imageSize","response","fetch","method","headers","body","JSON","stringify","image","ok","status","data","json","success","hasContext","_data$analysis2","processedResponse","text","slice","setSpeechText","setTimeout","handleProjectSelect","project","handleOnboardingComplete","toggleProjectManager","renderContent","className","children","onComplete","fileName","_jsxFileName","lineNumber","columnNumber","onProjectSelect","onNewProject","ref","onAnalysisComplete","project_name","onClick","onVoiceInput","disabled","_c","$RefreshReg$"],"sources":["/Users/manmohan/drone-assembly-ai/frontend/src/components/MainInterface.js"],"sourcesContent":["// frontend/src/components/MainInterface.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Clock, MessageSquare, Folder, ArrowLeftRight } from 'lucide-react';\nimport CameraFeed from './CameraFeed';\nimport InstructionPanel from './InstructionPanel';\nimport VisualizationPanel from './VisualizationPanel';\nimport VoiceInput from './VoiceInput';\nimport ProjectManager from './ProjectManager';\nimport NewUserOnboarding from './NewUserOnboarding';\nimport Logger from '../utils/logger';\nimport { processGeminiResponse } from '../utils/speechUtils';\nimport { getUserId, getProjectId } from '../utils/userIdentification';\nimport { useProject } from '../contexts/ProjectContext';\n\nconst MainInterface = () => {\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingStatus, setProcessingStatus] = useState(null);\n  const [showProjectManager, setShowProjectManager] = useState(false);\n  const [showOnboarding, setShowOnboarding] = useState(false);\n  const cameraFeedRef = useRef();\n  \n  // Get project context\n  const { \n    currentProject, \n    isLoading: projectLoading,\n    loadActiveProject, \n    setActiveProject,\n    addComponents,\n    addCompletedStep\n  } = useProject();\n\n  // Check for existing project on mount\n  useEffect(() => {\n    const projectId = getProjectId();\n    if (!projectId) {\n      // No existing project, show onboarding\n      setShowOnboarding(true);\n    }\n  }, []);\n\n  // Get current step from project\n  const currentStep = currentProject?.current_step || 1;\n\n  // Handle completed analysis\n  const handleAnalysisComplete = (result) => {\n    setAnalysisResult(result);\n    \n    // Log the result to see what components are being identified\n    Logger.info('Analysis completed', {\n      hasData: !!result,\n      hasAnalysis: !!result?.analysis,\n      identifiedComponents: !!result?.analysis?.identifiedComponents,\n      identifiedParts: !!result?.analysis?.identifiedParts\n    });\n    \n    // If we have project context and identified components, store them\n    if (currentProject) {\n      // Handle different response formats\n      let componentsToStore = [];\n      \n      if (result?.analysis?.identifiedComponents && Array.isArray(result.analysis.identifiedComponents)) {\n        componentsToStore = result.analysis.identifiedComponents;\n      } else if (result?.analysis?.identifiedParts && Array.isArray(result.analysis.identifiedParts)) {\n        componentsToStore = result.analysis.identifiedParts;\n      }\n      \n      if (componentsToStore.length > 0) {\n        Logger.info('Found components to store', { count: componentsToStore.length });\n        storeIdentifiedComponents(componentsToStore);\n      }\n    }\n    \n    // If analysis indicates we can proceed to next step\n    if (result?.analysis?.canProceed) {\n      const stepInfo = {\n        stepNumber: currentStep,\n        title: `Step ${currentStep} completed`,\n        timestamp: new Date().toISOString(),\n        details: result.analysis.feedback || 'Step completed successfully',\n      };\n      \n      // Store the completed step\n      addCompletedStep(stepInfo);\n    }\n  };\n\n  // Store identified components\n  const storeIdentifiedComponents = async (components) => {\n    if (!components || !Array.isArray(components) || components.length === 0) return;\n    \n    try {\n      Logger.info('Storing identified components', { count: components.length });\n      await addComponents(components);\n    } catch (error) {\n      Logger.error('Error storing components', error);\n    }\n  };\n\n  // Handle voice input\n  const handleVoiceInput = async (transcript, statusCallback) => {\n    if (!cameraFeedRef.current) {\n      Logger.error('Camera feed not initialized');\n      statusCallback('Error: Camera not ready');\n      return;\n    }\n\n    setIsProcessing(true);\n    Logger.info('Processing voice input:', transcript);\n    setProcessingStatus('Capturing image...');\n    \n    try {\n      // Get current frame from camera\n      const imageData = cameraFeedRef.current.captureFrame();\n      \n      if (!imageData) {\n        throw new Error('Failed to capture camera frame');\n      }\n      \n      Logger.info('Image captured successfully');\n      setProcessingStatus('Image captured ✅ Sending to API...');\n      statusCallback('Image captured ✅ Sending to API...');\n\n      // Get user and project IDs\n      const userId = getUserId();\n      const projectId = getProjectId();\n      \n      // Send to backend with detailed logging\n      Logger.info('Sending voice query to backend', {\n        step: currentStep,\n        query: transcript,\n        imageSize: imageData.length,\n        userId,\n        projectId\n      });\n      \n      const response = await fetch('http://localhost:5003/api/assembly/gemini/voice-query', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          image: imageData,\n          query: transcript,\n          currentStep,\n          userId,\n          projectId\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      Logger.info('Voice query response received', {\n        success: data.success,\n        status: data.analysis?.status,\n        hasContext: data.hasContext\n      });\n      \n      setProcessingStatus('Response received ✅');\n      statusCallback('Response received ✅');\n\n      if (data.success) {\n        // Update the analysis result\n        setAnalysisResult(data);\n        \n        // If we have identified components, store them\n        if (data.analysis?.identifiedComponents) {\n          storeIdentifiedComponents(data.analysis.identifiedComponents);\n        }\n        \n        // Process the response for speech\n        const processedResponse = processGeminiResponse(data);\n        Logger.info('Processing voice response for speech:', {\n          text: processedResponse.slice(0, 100) + (processedResponse.length > 100 ? '...' : '')\n        });\n        \n        // Set speech text on CameraFeed\n        if (cameraFeedRef.current && typeof cameraFeedRef.current.setSpeechText === 'function') {\n          // Use a slight delay to ensure state updates don't conflict\n          setTimeout(() => {\n            cameraFeedRef.current.setSpeechText(processedResponse);\n          }, 100);\n        }\n      } else {\n        throw new Error(data.error || 'Voice query failed');\n      }\n\n    } catch (error) {\n      Logger.error('Voice query error:', error);\n      setProcessingStatus('Error processing request ❌');\n      statusCallback('Error processing request ❌');\n      \n      // Set error message for speech\n      if (cameraFeedRef.current && typeof cameraFeedRef.current.setSpeechText === 'function') {\n        cameraFeedRef.current.setSpeechText('I encountered an error processing your question. Please try again.');\n      }\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Handle project selection\n  const handleProjectSelect = (project) => {\n    setActiveProject(project);\n    setShowProjectManager(false);\n  };\n\n  // Handle onboarding completion\n  const handleOnboardingComplete = () => {\n    setShowOnboarding(false);\n    loadActiveProject();\n  };\n\n  // Toggle project manager\n  const toggleProjectManager = () => {\n    setShowProjectManager(!showProjectManager);\n  };\n\n  // Render content based on state\n  const renderContent = () => {\n    if (showOnboarding) {\n      return (\n        <div className=\"container mx-auto px-4 py-8\">\n          <NewUserOnboarding onComplete={handleOnboardingComplete} />\n        </div>\n      );\n    }\n    \n    if (projectLoading) {\n      return (\n        <div className=\"container mx-auto px-4 py-8 flex items-center justify-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n        </div>\n      );\n    }\n    \n    return (\n      <main className=\"container mx-auto px-4 py-6\">\n        {showProjectManager ? (\n          <ProjectManager \n            onProjectSelect={handleProjectSelect}\n            onNewProject={handleProjectSelect}\n          />\n        ) : (\n          <div className=\"grid grid-cols-12 gap-6\">\n            <div className=\"col-span-12 lg:col-span-8\">\n              <CameraFeed \n                ref={cameraFeedRef}\n                currentStep={currentStep}\n                onAnalysisComplete={handleAnalysisComplete}\n              />\n              \n              {processingStatus && (\n                <div className=\"mt-4 bg-black/50 text-white p-4 rounded-xl\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div>\n                    <span>{processingStatus}</span>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className=\"col-span-12 lg:col-span-4 space-y-6\">\n              <InstructionPanel \n                currentStep={currentStep}\n                analysis={analysisResult?.analysis}\n                project={currentProject}\n              />\n              <VisualizationPanel \n                components={currentProject?.components || []}\n              />\n            </div>\n          </div>\n        )}\n      </main>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-indigo-800\">\n      <header className=\"border-b border-white/10 backdrop-blur-md bg-black/20\">\n        <div className=\"container mx-auto px-4 py-3\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-2xl font-bold text-white\">\n              {currentProject?.project_name || 'Drone Assembly'}\n            </h1>\n            <div className=\"flex items-center gap-4\">\n              <button \n                onClick={toggleProjectManager}\n                className=\"text-indigo-200 hover:text-white transition-colors\"\n                title=\"Projects\"\n              >\n                <Folder className=\"w-6 h-6\" />\n              </button>\n              <button className=\"text-indigo-200 hover:text-white transition-colors\" title=\"History\">\n                <Clock className=\"w-6 h-6\" />\n              </button>\n              <button className=\"text-indigo-200 hover:text-white transition-colors\" title=\"Chat\">\n                <MessageSquare className=\"w-6 h-6\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n      \n      {renderContent()}\n\n      <div className=\"fixed bottom-6 right-6 flex flex-col gap-4\">\n        <VoiceInput \n          onVoiceInput={handleVoiceInput}\n          disabled={isProcessing || showProjectManager || showOnboarding}\n        />\n        <button \n          className=\"w-14 h-14 bg-indigo-600 hover:bg-indigo-700 rounded-full flex items-center justify-center text-white shadow-lg transition-colors\"\n          onClick={toggleProjectManager}\n          title={showProjectManager ? \"Back to Assembly\" : \"Switch Project\"}\n        >\n          <ArrowLeftRight className=\"w-6 h-6\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MainInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}