{"ast":null,"code":"var _jsxFileName = \"/Users/manmohan/Documents/drone_assembler/frontend/src/components/MainInterface.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/MainInterface.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Clock, MessageSquare, Folder, ArrowLeftRight } from 'lucide-react';\nimport CameraFeed from './CameraFeed';\nimport InstructionPanel from './InstructionPanel';\nimport VisualizationPanel from './VisualizationPanel';\nimport VoiceInput from './VoiceInput';\nimport ProjectManager from './ProjectManager';\nimport NewUserOnboarding from './NewUserOnboarding';\nimport Logger from '../utils/logger';\nimport { processGeminiResponse } from '../utils/speechUtils';\nimport { getUserId, getProjectId } from '../utils/userIdentification';\nimport { useProject } from '../contexts/ProjectContext';\nimport GeneratedImagePanel from './GeneratedImagePanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainInterface = () => {\n  _s();\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingStatus, setProcessingStatus] = useState(null);\n  const [showProjectManager, setShowProjectManager] = useState(false);\n  const [showOnboarding, setShowOnboarding] = useState(false);\n  const cameraFeedRef = useRef();\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [imageGenerationError, setImageGenerationError] = useState(null);\n  const {\n    currentProject,\n    isLoading: projectLoading,\n    loadActiveProject,\n    setActiveProject,\n    addComponents,\n    addCompletedStep\n  } = useProject();\n  useEffect(() => {\n    const projectId = getProjectId();\n    if (!projectId) {\n      setShowOnboarding(true);\n    }\n  }, []);\n  const currentStep = (currentProject === null || currentProject === void 0 ? void 0 : currentProject.current_step) || 1;\n  const isVisualizationRequest = transcript => {\n    const visualizationTriggers = [/create.*image/i, /generate.*image/i, /show.*visual/i, /create.*visual/i, /visualize/i, /draw.*drone/i, /make.*picture/i, /create.*picture/i, /show.*what.*looks.*like/i];\n    return visualizationTriggers.some(trigger => trigger.test(transcript));\n  };\n  const handleAnalysisComplete = result => {\n    var _result$analysis, _result$analysis2, _result$analysis5;\n    if (!result) {\n      setAnalysisResult(null);\n      setProcessingStatus(null);\n      return;\n    }\n    setAnalysisResult(result);\n    Logger.info('Analysis completed', {\n      hasData: !!result,\n      hasAnalysis: !!(result !== null && result !== void 0 && result.analysis),\n      identifiedComponents: !!(result !== null && result !== void 0 && (_result$analysis = result.analysis) !== null && _result$analysis !== void 0 && _result$analysis.identifiedComponents),\n      identifiedParts: !!(result !== null && result !== void 0 && (_result$analysis2 = result.analysis) !== null && _result$analysis2 !== void 0 && _result$analysis2.identifiedParts),\n      timestamp: new Date().toISOString()\n    });\n    if (currentProject) {\n      var _result$analysis3, _result$analysis4;\n      let componentsToStore = [];\n      if (result !== null && result !== void 0 && (_result$analysis3 = result.analysis) !== null && _result$analysis3 !== void 0 && _result$analysis3.identifiedComponents && Array.isArray(result.analysis.identifiedComponents)) {\n        componentsToStore = result.analysis.identifiedComponents;\n      } else if (result !== null && result !== void 0 && (_result$analysis4 = result.analysis) !== null && _result$analysis4 !== void 0 && _result$analysis4.identifiedParts && Array.isArray(result.analysis.identifiedParts)) {\n        componentsToStore = result.analysis.identifiedParts;\n      }\n      if (componentsToStore.length > 0) {\n        Logger.info('Found components to store', {\n          count: componentsToStore.length\n        });\n        storeIdentifiedComponents(componentsToStore);\n        const componentNames = componentsToStore.map(c => typeof c === 'string' ? c : c.name).filter(Boolean).join(', ');\n        const prompt = `Create a detailed visualization of a drone with the following components: ${componentNames}`;\n        generateStableDiffusionImage(prompt);\n      }\n    }\n    if (result !== null && result !== void 0 && (_result$analysis5 = result.analysis) !== null && _result$analysis5 !== void 0 && _result$analysis5.canProceed) {\n      const stepInfo = {\n        stepNumber: currentStep,\n        title: `Step ${currentStep} completed`,\n        timestamp: new Date().toISOString(),\n        details: result.analysis.feedback || 'Step completed successfully'\n      };\n      const prompt = `Create a visualization of a drone after completing step ${currentStep}: ${stepInfo.details}`;\n      generateStableDiffusionImage(prompt);\n      addCompletedStep(stepInfo);\n    }\n  };\n  const storeIdentifiedComponents = async components => {\n    if (!components || !Array.isArray(components) || components.length === 0) return;\n    try {\n      Logger.info('Storing identified components', {\n        count: components.length\n      });\n      await addComponents(components);\n    } catch (error) {\n      Logger.error('Error storing components', error);\n    }\n  };\n\n  // Updated image generation function with a long timeout\n  const generateStableDiffusionImage = async prompt => {\n    try {\n      setIsGeneratingImage(true);\n      setImageGenerationError(null);\n\n      // Create an AbortController for timeout handling\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 120000); // 2 minute timeout\n\n      const response = await fetch('http://localhost:9999/generate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt,\n          userId: getUserId(),\n          projectId: getProjectId()\n        }),\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        throw new Error('Failed to generate image');\n      }\n\n      // Get the image as a blob and create an object URL\n      const blob = await response.blob();\n      const imageUrl = URL.createObjectURL(blob);\n      setGeneratedImage(imageUrl);\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        setImageGenerationError('Image generation timed out. Please try again.');\n      } else {\n        setImageGenerationError(error.message);\n      }\n      Logger.error('Error generating image:', error);\n    } finally {\n      setIsGeneratingImage(false);\n    }\n  };\n\n  // const handleVoiceInput = async (transcript, statusCallback) => {\n  //   if (!cameraFeedRef.current) {\n  //     Logger.error('Camera feed not initialized');\n  //     statusCallback('Error: Camera not ready');\n  //     return;\n  //   }\n\n  //   setAnalysisResult(null);\n  //   setIsProcessing(true);\n  //   Logger.info('Processing voice input:', transcript);\n  //   setProcessingStatus('Capturing image...');\n\n  //   try {\n  //     const imageData = cameraFeedRef.current.captureFrame();\n\n  //     if (!imageData) {\n  //       throw new Error('Failed to capture camera frame');\n  //     }\n\n  //     Logger.info('Image captured successfully');\n  //     setProcessingStatus('Image captured ✅ Sending to API...');\n  //     statusCallback('Image captured ✅ Sending to API...');\n\n  //     const userId = getUserId();\n  //     const projectId = getProjectId();\n\n  //     Logger.info('Sending voice query to backend', {\n  //       step: currentStep,\n  //       query: transcript,\n  //       imageSize: imageData.length,\n  //       userId,\n  //       projectId,\n  //       requestId: Date.now().toString()\n  //     });\n\n  //     const response = await fetch('http://localhost:5003/api/assembly/gemini/voice-query', {\n  //       method: 'POST',\n  //       headers: { 'Content-Type': 'application/json' },\n  //       body: JSON.stringify({\n  //         image: imageData,\n  //         query: transcript,\n  //         currentStep,\n  //         userId,\n  //         projectId,\n  //         requestId: Date.now().toString()\n  //       })\n  //     });\n\n  //     if (!response.ok) {\n  //       throw new Error(`HTTP error! status: ${response.status}`);\n  //     }\n\n  //     const data = await response.json();\n  //     Logger.info('Voice query response received', {\n  //       success: data.success,\n  //       status: data.analysis?.status,\n  //       hasContext: data.hasContext,\n  //       timestamp: new Date().toISOString()\n  //     });\n\n  //     setProcessingStatus('Response received ✅');\n  //     statusCallback('Response received ✅');\n\n  //     // if (data.success) {\n  //     //   setAnalysisResult(data);\n\n  //     //   if (data.analysis?.identifiedComponents?.length > 0) {\n  //     //     const componentNames = data.analysis.identifiedComponents\n  //     //       .map(c => typeof c === 'string' ? c : c.name)\n  //     //       .filter(Boolean)\n  //     //       .join(', ');\n\n  //     //     const prompt = `Create a detailed visualization of a drone components: ${componentNames}`;\n  //     //     generateStableDiffusionImage(prompt);\n  //     //     storeIdentifiedComponents(data.analysis.identifiedComponents);\n  //     //   }\n  //     if (data.success) {\n  //       if (data.analysis?.identifiedComponents?.length > 0) {\n  //         const componentNames = data.analysis.identifiedComponents\n  //           .map(c => typeof c === 'string' ? c : c.name)\n  //           .filter(Boolean)\n  //           .join(', ');\n\n  //         const prompt = `Create a detailed visualization of a drone with the following components: ${componentNames}`;\n  //         generateStableDiffusionImage(prompt);\n  //       }\n  //     }\n\n  //       const processedResponse = processGeminiResponse(data);\n  //       Logger.info('Processing voice response for speech:', {\n  //         text: processedResponse.slice(0, 100) + (processedResponse.length > 100 ? '...' : ''),\n  //         timestamp: new Date().toISOString()\n  //       });\n\n  //       if (cameraFeedRef.current?.setSpeechText) {\n  //         cameraFeedRef.current.setSpeechText('');\n  //         setTimeout(() => {\n  //           cameraFeedRef.current.setSpeechText(processedResponse);\n  //         }, 100);\n  //       }\n  //     } else {\n  //       throw new Error(data.error || 'Voice query failed');\n  //     }\n\n  //   } catch (error) {\n  //     Logger.error('Voice query error:', error);\n  //     setProcessingStatus('Error processing request ❌');\n  //     statusCallback('Error processing request ❌');\n  //     setAnalysisResult(null);\n\n  //     if (cameraFeedRef.current?.setSpeechText) {\n  //       cameraFeedRef.current.setSpeechText('I encountered an error processing your question. Please try again.');\n  //     }\n  //   } finally {\n  //     setIsProcessing(false);\n  //   }\n  // };\n\n  const handleVoiceInput = async (transcript, statusCallback) => {\n    if (isProcessing) {\n      Logger.warn('Analysis already in progress, skipping voice input');\n      return;\n    }\n    setIsProcessing(true);\n    setSpeechText('');\n    try {\n      Logger.info('Processing voice input:', transcript);\n\n      // Check if this is a visualization request\n      const shouldGenerateImage = isVisualizationRequest(transcript);\n\n      // Rest of your existing handleVoiceInput code...\n      const data = await processVoiceQuery(transcript);\n      if (data.success) {\n        let prompt = '';\n\n        // Only generate image if explicitly requested\n        if (shouldGenerateImage) {\n          var _data$analysis, _data$analysis$identi;\n          if (((_data$analysis = data.analysis) === null || _data$analysis === void 0 ? void 0 : (_data$analysis$identi = _data$analysis.identifiedComponents) === null || _data$analysis$identi === void 0 ? void 0 : _data$analysis$identi.length) > 0) {\n            // If components are identified, include them in the visualization\n            const componentNames = data.analysis.identifiedComponents.map(c => typeof c === 'string' ? c : c.name).filter(Boolean).join(', ');\n            prompt = `${transcript}. Include these components: ${componentNames}`;\n          } else {\n            // Use the original request as the prompt\n            prompt = transcript;\n          }\n          Logger.info('Generating visualization based on user request', {\n            prompt\n          });\n          generateStableDiffusionImage(prompt);\n        }\n\n        // Process the response for speech\n        const speechText = processGeminiResponse(data);\n        setSpeechText(speechText);\n        onAnalysisComplete(data);\n      }\n    } catch (error) {\n      Logger.error('Voice query error:', error);\n      setSpeechText('I encountered an error processing your request. Please try again.');\n      onAnalysisComplete(null);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const handleProjectSelect = project => {\n    setActiveProject(project);\n    setShowProjectManager(false);\n  };\n  const handleOnboardingComplete = () => {\n    setShowOnboarding(false);\n    loadActiveProject();\n  };\n  const toggleProjectManager = () => {\n    setShowProjectManager(!showProjectManager);\n  };\n  const renderContent = () => {\n    if (showOnboarding) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4 py-8\",\n        children: /*#__PURE__*/_jsxDEV(NewUserOnboarding, {\n          onComplete: handleOnboardingComplete,\n          onGenerateImage: generateStableDiffusionImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this);\n    }\n    if (projectLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4 py-8 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mx-auto px-4 py-6\",\n      children: showProjectManager ? /*#__PURE__*/_jsxDEV(ProjectManager, {\n        onProjectSelect: handleProjectSelect,\n        onNewProject: handleProjectSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-12 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-12 lg:col-span-8\",\n          children: [/*#__PURE__*/_jsxDEV(CameraFeed, {\n            ref: cameraFeedRef,\n            currentStep: currentStep,\n            onAnalysisComplete: handleAnalysisComplete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), processingStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 bg-black/50 text-white p-4 rounded-xl\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-3 h-3 bg-green-500 rounded-full animate-pulse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: processingStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-12 lg:col-span-4 space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(InstructionPanel, {\n            currentStep: currentStep,\n            analysis: analysisResult === null || analysisResult === void 0 ? void 0 : analysisResult.analysis,\n            project: currentProject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VisualizationPanel, {\n            components: (currentProject === null || currentProject === void 0 ? void 0 : currentProject.components) || []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GeneratedImagePanel, {\n            image: generatedImage,\n            isLoading: isGeneratingImage,\n            error: imageGenerationError,\n            title: \"Drone Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-indigo-800\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"border-b border-white/10 backdrop-blur-md bg-black/20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4 py-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-white\",\n            children: (currentProject === null || currentProject === void 0 ? void 0 : currentProject.project_name) || 'Drone Assembly'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleProjectManager,\n              className: \"text-indigo-200 hover:text-white transition-colors\",\n              title: \"Projects\",\n              children: /*#__PURE__*/_jsxDEV(Folder, {\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-indigo-200 hover:text-white transition-colors\",\n              title: \"History\",\n              children: /*#__PURE__*/_jsxDEV(Clock, {\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-indigo-200 hover:text-white transition-colors\",\n              title: \"Chat\",\n              children: /*#__PURE__*/_jsxDEV(MessageSquare, {\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this), renderContent(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-6 right-6 flex flex-col gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(VoiceInput, {\n        onVoiceInput: handleVoiceInput,\n        disabled: isProcessing || showProjectManager || showOnboarding\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-14 h-14 bg-indigo-600 hover:bg-indigo-700 rounded-full flex items-center justify-center text-white shadow-lg transition-colors\",\n        onClick: toggleProjectManager,\n        title: showProjectManager ? \"Back to Assembly\" : \"Switch Project\",\n        children: /*#__PURE__*/_jsxDEV(ArrowLeftRight, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 428,\n    columnNumber: 5\n  }, this);\n};\n_s(MainInterface, \"R84m81+n7xnXBzHFGm6lNCHHin0=\", false, function () {\n  return [useProject];\n});\n_c = MainInterface;\nexport default MainInterface;\nvar _c;\n$RefreshReg$(_c, \"MainInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Clock","MessageSquare","Folder","ArrowLeftRight","CameraFeed","InstructionPanel","VisualizationPanel","VoiceInput","ProjectManager","NewUserOnboarding","Logger","processGeminiResponse","getUserId","getProjectId","useProject","GeneratedImagePanel","jsxDEV","_jsxDEV","MainInterface","_s","analysisResult","setAnalysisResult","isProcessing","setIsProcessing","processingStatus","setProcessingStatus","showProjectManager","setShowProjectManager","showOnboarding","setShowOnboarding","cameraFeedRef","generatedImage","setGeneratedImage","isGeneratingImage","setIsGeneratingImage","imageGenerationError","setImageGenerationError","currentProject","isLoading","projectLoading","loadActiveProject","setActiveProject","addComponents","addCompletedStep","projectId","currentStep","current_step","isVisualizationRequest","transcript","visualizationTriggers","some","trigger","test","handleAnalysisComplete","result","_result$analysis","_result$analysis2","_result$analysis5","info","hasData","hasAnalysis","analysis","identifiedComponents","identifiedParts","timestamp","Date","toISOString","_result$analysis3","_result$analysis4","componentsToStore","Array","isArray","length","count","storeIdentifiedComponents","componentNames","map","c","name","filter","Boolean","join","prompt","generateStableDiffusionImage","canProceed","stepInfo","stepNumber","title","details","feedback","components","error","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","method","headers","body","JSON","stringify","userId","signal","clearTimeout","ok","Error","blob","imageUrl","URL","createObjectURL","message","handleVoiceInput","statusCallback","warn","setSpeechText","shouldGenerateImage","data","processVoiceQuery","success","_data$analysis","_data$analysis$identi","speechText","onAnalysisComplete","handleProjectSelect","project","handleOnboardingComplete","toggleProjectManager","renderContent","className","children","onComplete","onGenerateImage","fileName","_jsxFileName","lineNumber","columnNumber","onProjectSelect","onNewProject","ref","image","project_name","onClick","onVoiceInput","disabled","_c","$RefreshReg$"],"sources":["/Users/manmohan/Documents/drone_assembler/frontend/src/components/MainInterface.js"],"sourcesContent":["// frontend/src/components/MainInterface.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Clock, MessageSquare, Folder, ArrowLeftRight } from 'lucide-react';\nimport CameraFeed from './CameraFeed';\nimport InstructionPanel from './InstructionPanel';\nimport VisualizationPanel from './VisualizationPanel';\nimport VoiceInput from './VoiceInput';\nimport ProjectManager from './ProjectManager';\nimport NewUserOnboarding from './NewUserOnboarding';\nimport Logger from '../utils/logger';\nimport { processGeminiResponse } from '../utils/speechUtils';\nimport { getUserId, getProjectId } from '../utils/userIdentification';\nimport { useProject } from '../contexts/ProjectContext';\nimport GeneratedImagePanel from './GeneratedImagePanel';\n\nconst MainInterface = () => {\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingStatus, setProcessingStatus] = useState(null);\n  const [showProjectManager, setShowProjectManager] = useState(false);\n  const [showOnboarding, setShowOnboarding] = useState(false);\n  const cameraFeedRef = useRef();\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [imageGenerationError, setImageGenerationError] = useState(null);\n\n  const { \n    currentProject, \n    isLoading: projectLoading,\n    loadActiveProject, \n    setActiveProject,\n    addComponents,\n    addCompletedStep\n  } = useProject();\n\n  useEffect(() => {\n    const projectId = getProjectId();\n    if (!projectId) {\n      setShowOnboarding(true);\n    }\n  }, []);\n\n  const currentStep = currentProject?.current_step || 1;\n\n  const isVisualizationRequest = (transcript) => {\n    const visualizationTriggers = [\n      /create.*image/i,\n      /generate.*image/i,\n      /show.*visual/i,\n      /create.*visual/i,\n      /visualize/i,\n      /draw.*drone/i,\n      /make.*picture/i,\n      /create.*picture/i,\n      /show.*what.*looks.*like/i\n    ];\n    \n    return visualizationTriggers.some(trigger => trigger.test(transcript));\n  };\n\n  const handleAnalysisComplete = (result) => {\n    if (!result) {\n      setAnalysisResult(null);\n      setProcessingStatus(null);\n      return;\n    }\n    \n    setAnalysisResult(result);\n    \n    Logger.info('Analysis completed', {\n      hasData: !!result,\n      hasAnalysis: !!result?.analysis,\n      identifiedComponents: !!result?.analysis?.identifiedComponents,\n      identifiedParts: !!result?.analysis?.identifiedParts,\n      timestamp: new Date().toISOString()\n    });\n    \n    if (currentProject) {\n      let componentsToStore = [];\n      \n      if (result?.analysis?.identifiedComponents && Array.isArray(result.analysis.identifiedComponents)) {\n        componentsToStore = result.analysis.identifiedComponents;\n      } else if (result?.analysis?.identifiedParts && Array.isArray(result.analysis.identifiedParts)) {\n        componentsToStore = result.analysis.identifiedParts;\n      }\n      \n      if (componentsToStore.length > 0) {\n        Logger.info('Found components to store', { count: componentsToStore.length });\n        storeIdentifiedComponents(componentsToStore);\n        \n        const componentNames = componentsToStore\n          .map(c => typeof c === 'string' ? c : c.name)\n          .filter(Boolean)\n          .join(', ');\n        \n        const prompt = `Create a detailed visualization of a drone with the following components: ${componentNames}`;\n        generateStableDiffusionImage(prompt);\n      }\n    }\n    \n    if (result?.analysis?.canProceed) {\n      const stepInfo = {\n        stepNumber: currentStep,\n        title: `Step ${currentStep} completed`,\n        timestamp: new Date().toISOString(),\n        details: result.analysis.feedback || 'Step completed successfully',\n      };\n      \n      const prompt = `Create a visualization of a drone after completing step ${currentStep}: ${stepInfo.details}`;\n      generateStableDiffusionImage(prompt);\n      \n      addCompletedStep(stepInfo);\n    }\n  };\n\n  const storeIdentifiedComponents = async (components) => {\n    if (!components || !Array.isArray(components) || components.length === 0) return;\n    \n    try {\n      Logger.info('Storing identified components', { count: components.length });\n      await addComponents(components);\n    } catch (error) {\n      Logger.error('Error storing components', error);\n    }\n  };\n  \n  // Updated image generation function with a long timeout\n  const generateStableDiffusionImage = async (prompt) => {\n    try {\n      setIsGeneratingImage(true);\n      setImageGenerationError(null);\n      \n      // Create an AbortController for timeout handling\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 120000); // 2 minute timeout\n      \n      const response = await fetch('http://localhost:9999/generate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt,\n          userId: getUserId(),\n          projectId: getProjectId()\n        }),\n        signal: controller.signal\n      });\n      \n      clearTimeout(timeoutId);\n  \n      if (!response.ok) {\n        throw new Error('Failed to generate image');\n      }\n  \n      // Get the image as a blob and create an object URL\n      const blob = await response.blob();\n      const imageUrl = URL.createObjectURL(blob);\n      setGeneratedImage(imageUrl);\n      \n    } catch (error) {\n      if (error.name === 'AbortError') {\n        setImageGenerationError('Image generation timed out. Please try again.');\n      } else {\n        setImageGenerationError(error.message);\n      }\n      Logger.error('Error generating image:', error);\n    } finally {\n      setIsGeneratingImage(false);\n    }\n  };\n  \n  // const handleVoiceInput = async (transcript, statusCallback) => {\n  //   if (!cameraFeedRef.current) {\n  //     Logger.error('Camera feed not initialized');\n  //     statusCallback('Error: Camera not ready');\n  //     return;\n  //   }\n  \n  //   setAnalysisResult(null);\n  //   setIsProcessing(true);\n  //   Logger.info('Processing voice input:', transcript);\n  //   setProcessingStatus('Capturing image...');\n    \n  //   try {\n  //     const imageData = cameraFeedRef.current.captureFrame();\n      \n  //     if (!imageData) {\n  //       throw new Error('Failed to capture camera frame');\n  //     }\n      \n  //     Logger.info('Image captured successfully');\n  //     setProcessingStatus('Image captured ✅ Sending to API...');\n  //     statusCallback('Image captured ✅ Sending to API...');\n  \n  //     const userId = getUserId();\n  //     const projectId = getProjectId();\n      \n  //     Logger.info('Sending voice query to backend', {\n  //       step: currentStep,\n  //       query: transcript,\n  //       imageSize: imageData.length,\n  //       userId,\n  //       projectId,\n  //       requestId: Date.now().toString()\n  //     });\n      \n  //     const response = await fetch('http://localhost:5003/api/assembly/gemini/voice-query', {\n  //       method: 'POST',\n  //       headers: { 'Content-Type': 'application/json' },\n  //       body: JSON.stringify({\n  //         image: imageData,\n  //         query: transcript,\n  //         currentStep,\n  //         userId,\n  //         projectId,\n  //         requestId: Date.now().toString()\n  //       })\n  //     });\n  \n  //     if (!response.ok) {\n  //       throw new Error(`HTTP error! status: ${response.status}`);\n  //     }\n  \n  //     const data = await response.json();\n  //     Logger.info('Voice query response received', {\n  //       success: data.success,\n  //       status: data.analysis?.status,\n  //       hasContext: data.hasContext,\n  //       timestamp: new Date().toISOString()\n  //     });\n      \n  //     setProcessingStatus('Response received ✅');\n  //     statusCallback('Response received ✅');\n  \n  //     // if (data.success) {\n  //     //   setAnalysisResult(data);\n        \n  //     //   if (data.analysis?.identifiedComponents?.length > 0) {\n  //     //     const componentNames = data.analysis.identifiedComponents\n  //     //       .map(c => typeof c === 'string' ? c : c.name)\n  //     //       .filter(Boolean)\n  //     //       .join(', ');\n          \n  //     //     const prompt = `Create a detailed visualization of a drone components: ${componentNames}`;\n  //     //     generateStableDiffusionImage(prompt);\n  //     //     storeIdentifiedComponents(data.analysis.identifiedComponents);\n  //     //   }\n  //     if (data.success) {\n  //       if (data.analysis?.identifiedComponents?.length > 0) {\n  //         const componentNames = data.analysis.identifiedComponents\n  //           .map(c => typeof c === 'string' ? c : c.name)\n  //           .filter(Boolean)\n  //           .join(', ');\n          \n  //         const prompt = `Create a detailed visualization of a drone with the following components: ${componentNames}`;\n  //         generateStableDiffusionImage(prompt);\n  //       }\n  //     }\n        \n  //       const processedResponse = processGeminiResponse(data);\n  //       Logger.info('Processing voice response for speech:', {\n  //         text: processedResponse.slice(0, 100) + (processedResponse.length > 100 ? '...' : ''),\n  //         timestamp: new Date().toISOString()\n  //       });\n        \n  //       if (cameraFeedRef.current?.setSpeechText) {\n  //         cameraFeedRef.current.setSpeechText('');\n  //         setTimeout(() => {\n  //           cameraFeedRef.current.setSpeechText(processedResponse);\n  //         }, 100);\n  //       }\n  //     } else {\n  //       throw new Error(data.error || 'Voice query failed');\n  //     }\n  \n  //   } catch (error) {\n  //     Logger.error('Voice query error:', error);\n  //     setProcessingStatus('Error processing request ❌');\n  //     statusCallback('Error processing request ❌');\n  //     setAnalysisResult(null);\n      \n  //     if (cameraFeedRef.current?.setSpeechText) {\n  //       cameraFeedRef.current.setSpeechText('I encountered an error processing your question. Please try again.');\n  //     }\n  //   } finally {\n  //     setIsProcessing(false);\n  //   }\n  // };\n\n  const handleVoiceInput = async (transcript, statusCallback) => {\n    if (isProcessing) {\n      Logger.warn('Analysis already in progress, skipping voice input');\n      return;\n    }\n    \n    setIsProcessing(true);\n    setSpeechText('');\n    \n    try {\n      Logger.info('Processing voice input:', transcript);\n      \n      // Check if this is a visualization request\n      const shouldGenerateImage = isVisualizationRequest(transcript);\n      \n      // Rest of your existing handleVoiceInput code...\n      const data = await processVoiceQuery(transcript);\n      \n      if (data.success) {\n        let prompt = '';\n        \n        // Only generate image if explicitly requested\n        if (shouldGenerateImage) {\n          if (data.analysis?.identifiedComponents?.length > 0) {\n            // If components are identified, include them in the visualization\n            const componentNames = data.analysis.identifiedComponents\n              .map(c => typeof c === 'string' ? c : c.name)\n              .filter(Boolean)\n              .join(', ');\n            \n            prompt = `${transcript}. Include these components: ${componentNames}`;\n          } else {\n            // Use the original request as the prompt\n            prompt = transcript;\n          }\n          \n          Logger.info('Generating visualization based on user request', { prompt });\n          generateStableDiffusionImage(prompt);\n        }\n        \n        // Process the response for speech\n        const speechText = processGeminiResponse(data);\n        setSpeechText(speechText);\n        \n        onAnalysisComplete(data);\n      }\n    } catch (error) {\n      Logger.error('Voice query error:', error);\n      setSpeechText('I encountered an error processing your request. Please try again.');\n      onAnalysisComplete(null);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleProjectSelect = (project) => {\n    setActiveProject(project);\n    setShowProjectManager(false);\n  };\n\n  const handleOnboardingComplete = () => {\n    setShowOnboarding(false);\n    loadActiveProject();\n  };\n\n  const toggleProjectManager = () => {\n    setShowProjectManager(!showProjectManager);\n  };\n\n  const renderContent = () => {\n    if (showOnboarding) {\n      return (\n        <div className=\"container mx-auto px-4 py-8\">\n          <NewUserOnboarding \n            onComplete={handleOnboardingComplete}\n            onGenerateImage={generateStableDiffusionImage} \n          />\n        </div>\n      );\n    }\n    \n    if (projectLoading) {\n      return (\n        <div className=\"container mx-auto px-4 py-8 flex items-center justify-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n        </div>\n      );\n    }\n    \n    return (\n      <main className=\"container mx-auto px-4 py-6\">\n        {showProjectManager ? (\n          <ProjectManager \n            onProjectSelect={handleProjectSelect}\n            onNewProject={handleProjectSelect}\n          />\n        ) : (\n          <div className=\"grid grid-cols-12 gap-6\">\n            <div className=\"col-span-12 lg:col-span-8\">\n              <CameraFeed \n                ref={cameraFeedRef}\n                currentStep={currentStep}\n                onAnalysisComplete={handleAnalysisComplete}\n              />\n              \n              {processingStatus && (\n                <div className=\"mt-4 bg-black/50 text-white p-4 rounded-xl\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div>\n                    <span>{processingStatus}</span>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className=\"col-span-12 lg:col-span-4 space-y-6\">\n              <InstructionPanel \n                currentStep={currentStep}\n                analysis={analysisResult?.analysis}\n                project={currentProject}\n              />\n              <VisualizationPanel \n                components={currentProject?.components || []}\n              />\n              <GeneratedImagePanel\n                image={generatedImage}\n                isLoading={isGeneratingImage}\n                error={imageGenerationError}\n                title=\"Drone Visualization\"\n              />\n            </div>\n          </div>\n        )}\n      </main>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-indigo-800\">\n      <header className=\"border-b border-white/10 backdrop-blur-md bg-black/20\">\n        <div className=\"container mx-auto px-4 py-3\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-2xl font-bold text-white\">\n              {currentProject?.project_name || 'Drone Assembly'}\n            </h1>\n            <div className=\"flex items-center gap-4\">\n              <button \n                onClick={toggleProjectManager}\n                className=\"text-indigo-200 hover:text-white transition-colors\"\n                title=\"Projects\"\n              >\n                <Folder className=\"w-6 h-6\" />\n              </button>\n              <button className=\"text-indigo-200 hover:text-white transition-colors\" title=\"History\">\n                <Clock className=\"w-6 h-6\" />\n              </button>\n              <button className=\"text-indigo-200 hover:text-white transition-colors\" title=\"Chat\">\n                <MessageSquare className=\"w-6 h-6\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n      \n      {renderContent()}\n\n      <div className=\"fixed bottom-6 right-6 flex flex-col gap-4\">\n        <VoiceInput \n          onVoiceInput={handleVoiceInput}\n          disabled={isProcessing || showProjectManager || showOnboarding}\n        />\n        <button \n          className=\"w-14 h-14 bg-indigo-600 hover:bg-indigo-700 rounded-full flex items-center justify-center text-white shadow-lg transition-colors\"\n          onClick={toggleProjectManager}\n          title={showProjectManager ? \"Back to Assembly\" : \"Switch Project\"}\n        >\n          <ArrowLeftRight className=\"w-6 h-6\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MainInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}