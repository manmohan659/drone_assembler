{"ast":null,"code":"var _jsxFileName = \"/Users/manmohan/drone-assembly-ai/frontend/src/components/VoiceInput.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/VoiceInput.js\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Mic, MicOff } from 'lucide-react';\nimport Logger from '../utils/logger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceInput = ({\n  onVoiceInput,\n  disabled = false\n}) => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [recognition, setRecognition] = useState(null);\n  const [error, setError] = useState(null);\n  const startListening = useCallback(() => {\n    try {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (!SpeechRecognition) {\n        throw new Error('Speech recognition is not supported in this browser');\n      }\n      const recognitionInstance = new SpeechRecognition();\n      recognitionInstance.continuous = false;\n      recognitionInstance.interimResults = true; // Enable interim results\n      recognitionInstance.lang = 'en-US';\n      recognitionInstance.onstart = () => {\n        Logger.info('Voice recognition started');\n        setIsListening(true);\n        setError(null);\n        setTranscript('Listening...');\n      };\n      recognitionInstance.onresult = event => {\n        const interimTranscript = Array.from(event.results).map(result => result[0].transcript).join('');\n        setTranscript(interimTranscript);\n\n        // If this is a final result\n        if (event.results[0].isFinal) {\n          Logger.info('Voice input received:', interimTranscript);\n          onVoiceInput(interimTranscript);\n          setTimeout(() => setTranscript(''), 3000); // Clear after 3 seconds\n        }\n      };\n      recognitionInstance.onerror = event => {\n        Logger.error('Voice recognition error:', event.error);\n        setError(`Error: ${event.error}`);\n        setIsListening(false);\n      };\n      recognitionInstance.onend = () => {\n        Logger.info('Voice recognition ended');\n        setIsListening(false);\n        if (!error) {\n          setTranscript('Processing...');\n        }\n      };\n      setRecognition(recognitionInstance);\n      recognitionInstance.start();\n    } catch (error) {\n      Logger.error('Failed to initialize voice recognition:', error);\n      setError(error.message);\n    }\n  }, [onVoiceInput, error]);\n  const stopListening = useCallback(() => {\n    if (recognition) {\n      recognition.stop();\n      setIsListening(false);\n    }\n  }, [recognition]);\n  useEffect(() => {\n    return () => {\n      if (recognition) {\n        recognition.stop();\n      }\n    };\n  }, [recognition]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-end gap-2\",\n    children: [transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-black/70 backdrop-blur-sm rounded-lg px-4 py-2 text-white text-sm max-w-xs\",\n      children: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-900/70 backdrop-blur-sm rounded-lg px-4 py-2 text-white text-sm max-w-xs\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: isListening ? stopListening : startListening,\n      disabled: disabled,\n      className: `w-14 h-14 rounded-full flex items-center justify-center text-white shadow-lg transition-colors relative ${isListening ? 'bg-red-600 hover:bg-red-700' : 'bg-purple-600 hover:bg-purple-700'} ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`,\n      title: isListening ? 'Stop listening' : 'Start voice input',\n      children: [isListening ? /*#__PURE__*/_jsxDEV(MicOff, {\n        className: \"w-6 h-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n        className: \"w-6 h-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 57\n      }, this), isListening && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 rounded-full border-4 border-red-400 animate-ping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceInput, \"adbrQsXOdgmuL12gya+P0m6ODZI=\");\n_c = VoiceInput;\nexport default VoiceInput;\nvar _c;\n$RefreshReg$(_c, \"VoiceInput\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","Mic","MicOff","Logger","jsxDEV","_jsxDEV","VoiceInput","onVoiceInput","disabled","_s","isListening","setIsListening","transcript","setTranscript","recognition","setRecognition","error","setError","startListening","SpeechRecognition","window","webkitSpeechRecognition","Error","recognitionInstance","continuous","interimResults","lang","onstart","info","onresult","event","interimTranscript","Array","from","results","map","result","join","isFinal","setTimeout","onerror","onend","start","message","stopListening","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","_c","$RefreshReg$"],"sources":["/Users/manmohan/drone-assembly-ai/frontend/src/components/VoiceInput.js"],"sourcesContent":["// frontend/src/components/VoiceInput.js\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Mic, MicOff } from 'lucide-react';\nimport Logger from '../utils/logger';\n\nconst VoiceInput = ({ onVoiceInput, disabled = false }) => {\n  const [isListening, setIsListening] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [recognition, setRecognition] = useState(null);\n  const [error, setError] = useState(null);\n\n  const startListening = useCallback(() => {\n    try {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (!SpeechRecognition) {\n        throw new Error('Speech recognition is not supported in this browser');\n      }\n\n      const recognitionInstance = new SpeechRecognition();\n      \n      recognitionInstance.continuous = false;\n      recognitionInstance.interimResults = true; // Enable interim results\n      recognitionInstance.lang = 'en-US';\n\n      recognitionInstance.onstart = () => {\n        Logger.info('Voice recognition started');\n        setIsListening(true);\n        setError(null);\n        setTranscript('Listening...');\n      };\n\n      recognitionInstance.onresult = (event) => {\n        const interimTranscript = Array.from(event.results)\n          .map(result => result[0].transcript)\n          .join('');\n        \n        setTranscript(interimTranscript);\n        \n        // If this is a final result\n        if (event.results[0].isFinal) {\n          Logger.info('Voice input received:', interimTranscript);\n          onVoiceInput(interimTranscript);\n          setTimeout(() => setTranscript(''), 3000); // Clear after 3 seconds\n        }\n      };\n\n      recognitionInstance.onerror = (event) => {\n        Logger.error('Voice recognition error:', event.error);\n        setError(`Error: ${event.error}`);\n        setIsListening(false);\n      };\n\n      recognitionInstance.onend = () => {\n        Logger.info('Voice recognition ended');\n        setIsListening(false);\n        if (!error) {\n          setTranscript('Processing...');\n        }\n      };\n\n      setRecognition(recognitionInstance);\n      recognitionInstance.start();\n    } catch (error) {\n      Logger.error('Failed to initialize voice recognition:', error);\n      setError(error.message);\n    }\n  }, [onVoiceInput, error]);\n\n  const stopListening = useCallback(() => {\n    if (recognition) {\n      recognition.stop();\n      setIsListening(false);\n    }\n  }, [recognition]);\n\n  useEffect(() => {\n    return () => {\n      if (recognition) {\n        recognition.stop();\n      }\n    };\n  }, [recognition]);\n\n  return (\n    <div className=\"flex flex-col items-end gap-2\">\n      {/* Transcript display */}\n      {transcript && (\n        <div className=\"bg-black/70 backdrop-blur-sm rounded-lg px-4 py-2 text-white text-sm max-w-xs\">\n          {transcript}\n        </div>\n      )}\n      \n      {/* Error display */}\n      {error && (\n        <div className=\"bg-red-900/70 backdrop-blur-sm rounded-lg px-4 py-2 text-white text-sm max-w-xs\">\n          {error}\n        </div>\n      )}\n      \n      {/* Voice input button */}\n      <button\n        onClick={isListening ? stopListening : startListening}\n        disabled={disabled}\n        className={`w-14 h-14 rounded-full flex items-center justify-center text-white shadow-lg transition-colors relative ${\n          isListening \n            ? 'bg-red-600 hover:bg-red-700' \n            : 'bg-purple-600 hover:bg-purple-700'\n        } ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n        title={isListening ? 'Stop listening' : 'Start voice input'}\n      >\n        {isListening ? <MicOff className=\"w-6 h-6\" /> : <Mic className=\"w-6 h-6\" />}\n        \n        {/* Listening animation */}\n        {isListening && (\n          <div className=\"absolute inset-0 rounded-full border-4 border-red-400 animate-ping\" />\n        )}\n      </button>\n    </div>\n  );\n};\n\nexport default VoiceInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}