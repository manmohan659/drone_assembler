{"ast":null,"code":"var _jsxFileName = \"/Users/manmohan/Documents/drone_assembler/frontend/src/components/MainInterface.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/MainInterface.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Clock, MessageSquare, Folder, ArrowLeftRight } from 'lucide-react';\nimport CameraFeed from './CameraFeed';\nimport InstructionPanel from './InstructionPanel';\nimport VisualizationPanel from './VisualizationPanel';\nimport VoiceInput from './VoiceInput';\nimport ProjectManager from './ProjectManager';\nimport NewUserOnboarding from './NewUserOnboarding';\nimport Logger from '../utils/logger';\nimport { processGeminiResponse } from '../utils/speechUtils';\nimport { getUserId, getProjectId } from '../utils/userIdentification';\nimport { useProject } from '../contexts/ProjectContext';\nimport GeneratedImagePanel from './GeneratedImagePanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainInterface = () => {\n  _s();\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingStatus, setProcessingStatus] = useState(null);\n  const [showProjectManager, setShowProjectManager] = useState(false);\n  const [showOnboarding, setShowOnboarding] = useState(false);\n  const cameraFeedRef = useRef();\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [imageGenerationError, setImageGenerationError] = useState(null);\n  // Get project context\n  const {\n    currentProject,\n    isLoading: projectLoading,\n    loadActiveProject,\n    setActiveProject,\n    addComponents,\n    addCompletedStep\n  } = useProject();\n\n  // Check for existing project on mount\n  useEffect(() => {\n    const projectId = getProjectId();\n    if (!projectId) {\n      // No existing project, show onboarding\n      setShowOnboarding(true);\n    }\n  }, []);\n\n  // Get current step from project\n  const currentStep = (currentProject === null || currentProject === void 0 ? void 0 : currentProject.current_step) || 1;\n\n  // Handle completed analysis\n  const handleAnalysisComplete = result => {\n    var _result$analysis, _result$analysis2, _result$analysis5;\n    if (!result) {\n      setAnalysisResult(null);\n      setProcessingStatus(null);\n      return;\n    }\n    setAnalysisResult(result);\n    Logger.info('Analysis completed', {\n      hasData: !!result,\n      hasAnalysis: !!(result !== null && result !== void 0 && result.analysis),\n      identifiedComponents: !!(result !== null && result !== void 0 && (_result$analysis = result.analysis) !== null && _result$analysis !== void 0 && _result$analysis.identifiedComponents),\n      identifiedParts: !!(result !== null && result !== void 0 && (_result$analysis2 = result.analysis) !== null && _result$analysis2 !== void 0 && _result$analysis2.identifiedParts),\n      timestamp: new Date().toISOString()\n    });\n\n    // If we have project context and identified components, store them\n    if (currentProject) {\n      var _result$analysis3, _result$analysis4;\n      let componentsToStore = [];\n      if (result !== null && result !== void 0 && (_result$analysis3 = result.analysis) !== null && _result$analysis3 !== void 0 && _result$analysis3.identifiedComponents && Array.isArray(result.analysis.identifiedComponents)) {\n        componentsToStore = result.analysis.identifiedComponents;\n      } else if (result !== null && result !== void 0 && (_result$analysis4 = result.analysis) !== null && _result$analysis4 !== void 0 && _result$analysis4.identifiedParts && Array.isArray(result.analysis.identifiedParts)) {\n        componentsToStore = result.analysis.identifiedParts;\n      }\n      if (componentsToStore.length > 0) {\n        Logger.info('Found components to store', {\n          count: componentsToStore.length\n        });\n        storeIdentifiedComponents(componentsToStore);\n\n        // Generate image for identified components\n        const componentNames = componentsToStore.map(c => typeof c === 'string' ? c : c.name).filter(Boolean).join(', ');\n        const prompt = `Create a detailed visualization of a drone with the following components: ${componentNames}`;\n        generateStableDiffusionImage(prompt);\n      }\n    }\n\n    // Handle step completion\n    if (result !== null && result !== void 0 && (_result$analysis5 = result.analysis) !== null && _result$analysis5 !== void 0 && _result$analysis5.canProceed) {\n      const stepInfo = {\n        stepNumber: currentStep,\n        title: `Step ${currentStep} completed`,\n        timestamp: new Date().toISOString(),\n        details: result.analysis.feedback || 'Step completed successfully'\n      };\n\n      // Generate visualization for completed step\n      const prompt = `Create a visualization of a drone after completing step ${currentStep}: ${stepInfo.details}`;\n      generateStableDiffusionImage(prompt);\n\n      // Store the completed step\n      addCompletedStep(stepInfo);\n    }\n  };\n\n  // Store identified components\n  const storeIdentifiedComponents = async components => {\n    if (!components || !Array.isArray(components) || components.length === 0) return;\n    try {\n      Logger.info('Storing identified components', {\n        count: components.length\n      });\n      await addComponents(components);\n    } catch (error) {\n      Logger.error('Error storing components', error);\n    }\n  };\n  const generateStableDiffusionImage = async prompt => {\n    try {\n      setIsGeneratingImage(true);\n      setImageGenerationError(null);\n      const response = await fetch('http://localhost:9999/api/assembly/visualize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt,\n          userId: getUserId(),\n          projectId: getProjectId()\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to generate image');\n      }\n      const data = await response.json();\n      if (data.success) {\n        setGeneratedImage(data.image);\n      } else {\n        throw new Error(data.error || 'Image generation failed');\n      }\n    } catch (error) {\n      Logger.error('Error generating image:', error);\n      setImageGenerationError(error.message);\n    } finally {\n      setIsGeneratingImage(false);\n    }\n  };\n  const handleVoiceInput = async (transcript, statusCallback) => {\n    if (!cameraFeedRef.current) {\n      Logger.error('Camera feed not initialized');\n      statusCallback('Error: Camera not ready');\n      return;\n    }\n    setAnalysisResult(null);\n    setIsProcessing(true);\n    Logger.info('Processing voice input:', transcript);\n    setProcessingStatus('Capturing image...');\n    try {\n      var _data$analysis;\n      const imageData = cameraFeedRef.current.captureFrame();\n      if (!imageData) {\n        throw new Error('Failed to capture camera frame');\n      }\n      Logger.info('Image captured successfully');\n      setProcessingStatus('Image captured ✅ Sending to API...');\n      statusCallback('Image captured ✅ Sending to API...');\n      const userId = getUserId();\n      const projectId = getProjectId();\n      Logger.info('Sending voice query to backend', {\n        step: currentStep,\n        query: transcript,\n        imageSize: imageData.length,\n        userId,\n        projectId,\n        requestId: Date.now().toString()\n      });\n      const response = await fetch('http://localhost:5003/api/assembly/gemini/voice-query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          image: imageData,\n          query: transcript,\n          currentStep,\n          userId,\n          projectId,\n          requestId: Date.now().toString()\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      Logger.info('Voice query response received', {\n        success: data.success,\n        status: (_data$analysis = data.analysis) === null || _data$analysis === void 0 ? void 0 : _data$analysis.status,\n        hasContext: data.hasContext,\n        timestamp: new Date().toISOString()\n      });\n      setProcessingStatus('Response received ✅');\n      statusCallback('Response received ✅');\n      if (data.success) {\n        var _data$analysis2, _data$analysis2$ident, _cameraFeedRef$curren;\n        setAnalysisResult(data);\n\n        // Handle identified components\n        if (((_data$analysis2 = data.analysis) === null || _data$analysis2 === void 0 ? void 0 : (_data$analysis2$ident = _data$analysis2.identifiedComponents) === null || _data$analysis2$ident === void 0 ? void 0 : _data$analysis2$ident.length) > 0) {\n          const componentNames = data.analysis.identifiedComponents.map(c => typeof c === 'string' ? c : c.name).filter(Boolean).join(', ');\n          const prompt = `Create a detailed visualization of a drone components: ${componentNames}`;\n          generateStableDiffusionImage(prompt);\n          storeIdentifiedComponents(data.analysis.identifiedComponents);\n        }\n\n        // Process response for speech\n        const processedResponse = processGeminiResponse(data);\n        Logger.info('Processing voice response for speech:', {\n          text: processedResponse.slice(0, 100) + (processedResponse.length > 100 ? '...' : ''),\n          timestamp: new Date().toISOString()\n        });\n\n        // Set speech text\n        if ((_cameraFeedRef$curren = cameraFeedRef.current) !== null && _cameraFeedRef$curren !== void 0 && _cameraFeedRef$curren.setSpeechText) {\n          cameraFeedRef.current.setSpeechText('');\n          setTimeout(() => {\n            cameraFeedRef.current.setSpeechText(processedResponse);\n          }, 100);\n        }\n      } else {\n        throw new Error(data.error || 'Voice query failed');\n      }\n    } catch (error) {\n      var _cameraFeedRef$curren2;\n      Logger.error('Voice query error:', error);\n      setProcessingStatus('Error processing request ❌');\n      statusCallback('Error processing request ❌');\n      setAnalysisResult(null);\n      if ((_cameraFeedRef$curren2 = cameraFeedRef.current) !== null && _cameraFeedRef$curren2 !== void 0 && _cameraFeedRef$curren2.setSpeechText) {\n        cameraFeedRef.current.setSpeechText('I encountered an error processing your question. Please try again.');\n      }\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Handle project selection\n  const handleProjectSelect = project => {\n    setActiveProject(project);\n    setShowProjectManager(false);\n  };\n\n  // Handle onboarding completion\n  const handleOnboardingComplete = () => {\n    setShowOnboarding(false);\n    loadActiveProject();\n  };\n\n  // Toggle project manager\n  const toggleProjectManager = () => {\n    setShowProjectManager(!showProjectManager);\n  };\n\n  // Render content based on state\n  const renderContent = () => {\n    if (showOnboarding) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4 py-8\",\n        children: /*#__PURE__*/_jsxDEV(NewUserOnboarding, {\n          onComplete: handleOnboardingComplete,\n          onGenerateImage: generateStableDiffusionImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this);\n    }\n    if (projectLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4 py-8 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mx-auto px-4 py-6\",\n      children: showProjectManager ? /*#__PURE__*/_jsxDEV(ProjectManager, {\n        onProjectSelect: handleProjectSelect,\n        onNewProject: handleProjectSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-12 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-12 lg:col-span-8\",\n          children: [/*#__PURE__*/_jsxDEV(CameraFeed, {\n            ref: cameraFeedRef,\n            currentStep: currentStep,\n            onAnalysisComplete: handleAnalysisComplete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), processingStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 bg-black/50 text-white p-4 rounded-xl\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-3 h-3 bg-green-500 rounded-full animate-pulse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: processingStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-12 lg:col-span-4 space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(InstructionPanel, {\n            currentStep: currentStep,\n            analysis: analysisResult === null || analysisResult === void 0 ? void 0 : analysisResult.analysis,\n            project: currentProject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VisualizationPanel, {\n            components: (currentProject === null || currentProject === void 0 ? void 0 : currentProject.components) || []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GeneratedImagePanel, {\n            image: generatedImage,\n            isLoading: isGeneratingImage,\n            error: imageGenerationError,\n            title: \"Drone Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-indigo-800\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"border-b border-white/10 backdrop-blur-md bg-black/20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4 py-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-white\",\n            children: (currentProject === null || currentProject === void 0 ? void 0 : currentProject.project_name) || 'Drone Assembly'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleProjectManager,\n              className: \"text-indigo-200 hover:text-white transition-colors\",\n              title: \"Projects\",\n              children: /*#__PURE__*/_jsxDEV(Folder, {\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-indigo-200 hover:text-white transition-colors\",\n              title: \"History\",\n              children: /*#__PURE__*/_jsxDEV(Clock, {\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-indigo-200 hover:text-white transition-colors\",\n              title: \"Chat\",\n              children: /*#__PURE__*/_jsxDEV(MessageSquare, {\n                className: \"w-6 h-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), renderContent(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-6 right-6 flex flex-col gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(VoiceInput, {\n        onVoiceInput: handleVoiceInput,\n        disabled: isProcessing || showProjectManager || showOnboarding\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-14 h-14 bg-indigo-600 hover:bg-indigo-700 rounded-full flex items-center justify-center text-white shadow-lg transition-colors\",\n        onClick: toggleProjectManager,\n        title: showProjectManager ? \"Back to Assembly\" : \"Switch Project\",\n        children: /*#__PURE__*/_jsxDEV(ArrowLeftRight, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this);\n};\n_s(MainInterface, \"R84m81+n7xnXBzHFGm6lNCHHin0=\", false, function () {\n  return [useProject];\n});\n_c = MainInterface;\nexport default MainInterface;\nvar _c;\n$RefreshReg$(_c, \"MainInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Clock","MessageSquare","Folder","ArrowLeftRight","CameraFeed","InstructionPanel","VisualizationPanel","VoiceInput","ProjectManager","NewUserOnboarding","Logger","processGeminiResponse","getUserId","getProjectId","useProject","GeneratedImagePanel","jsxDEV","_jsxDEV","MainInterface","_s","analysisResult","setAnalysisResult","isProcessing","setIsProcessing","processingStatus","setProcessingStatus","showProjectManager","setShowProjectManager","showOnboarding","setShowOnboarding","cameraFeedRef","generatedImage","setGeneratedImage","isGeneratingImage","setIsGeneratingImage","imageGenerationError","setImageGenerationError","currentProject","isLoading","projectLoading","loadActiveProject","setActiveProject","addComponents","addCompletedStep","projectId","currentStep","current_step","handleAnalysisComplete","result","_result$analysis","_result$analysis2","_result$analysis5","info","hasData","hasAnalysis","analysis","identifiedComponents","identifiedParts","timestamp","Date","toISOString","_result$analysis3","_result$analysis4","componentsToStore","Array","isArray","length","count","storeIdentifiedComponents","componentNames","map","c","name","filter","Boolean","join","prompt","generateStableDiffusionImage","canProceed","stepInfo","stepNumber","title","details","feedback","components","error","response","fetch","method","headers","body","JSON","stringify","userId","ok","Error","data","json","success","image","message","handleVoiceInput","transcript","statusCallback","current","_data$analysis","imageData","captureFrame","step","query","imageSize","requestId","now","toString","status","hasContext","_data$analysis2","_data$analysis2$ident","_cameraFeedRef$curren","processedResponse","text","slice","setSpeechText","setTimeout","_cameraFeedRef$curren2","handleProjectSelect","project","handleOnboardingComplete","toggleProjectManager","renderContent","className","children","onComplete","onGenerateImage","fileName","_jsxFileName","lineNumber","columnNumber","onProjectSelect","onNewProject","ref","onAnalysisComplete","project_name","onClick","onVoiceInput","disabled","_c","$RefreshReg$"],"sources":["/Users/manmohan/Documents/drone_assembler/frontend/src/components/MainInterface.js"],"sourcesContent":["// frontend/src/components/MainInterface.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Clock, MessageSquare, Folder, ArrowLeftRight } from 'lucide-react';\nimport CameraFeed from './CameraFeed';\nimport InstructionPanel from './InstructionPanel';\nimport VisualizationPanel from './VisualizationPanel';\nimport VoiceInput from './VoiceInput';\nimport ProjectManager from './ProjectManager';\nimport NewUserOnboarding from './NewUserOnboarding';\nimport Logger from '../utils/logger';\nimport { processGeminiResponse } from '../utils/speechUtils';\nimport { getUserId, getProjectId } from '../utils/userIdentification';\nimport { useProject } from '../contexts/ProjectContext';\nimport GeneratedImagePanel from './GeneratedImagePanel';\n\nconst MainInterface = () => {\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingStatus, setProcessingStatus] = useState(null);\n  const [showProjectManager, setShowProjectManager] = useState(false);\n  const [showOnboarding, setShowOnboarding] = useState(false);\n  const cameraFeedRef = useRef();\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const [isGeneratingImage, setIsGeneratingImage] = useState(false);\n  const [imageGenerationError, setImageGenerationError] = useState(null);\n  // Get project context\n  const { \n    currentProject, \n    isLoading: projectLoading,\n    loadActiveProject, \n    setActiveProject,\n    addComponents,\n    addCompletedStep\n  } = useProject();\n\n  // Check for existing project on mount\n  useEffect(() => {\n    const projectId = getProjectId();\n    if (!projectId) {\n      // No existing project, show onboarding\n      setShowOnboarding(true);\n    }\n  }, []);\n\n  // Get current step from project\n  const currentStep = currentProject?.current_step || 1;\n\n  // Handle completed analysis\n  const handleAnalysisComplete = (result) => {\n    if (!result) {\n      setAnalysisResult(null);\n      setProcessingStatus(null);\n      return;\n    }\n  \n    setAnalysisResult(result);\n    \n    Logger.info('Analysis completed', {\n      hasData: !!result,\n      hasAnalysis: !!result?.analysis,\n      identifiedComponents: !!result?.analysis?.identifiedComponents,\n      identifiedParts: !!result?.analysis?.identifiedParts,\n      timestamp: new Date().toISOString()\n    });\n    \n    // If we have project context and identified components, store them\n    if (currentProject) {\n      let componentsToStore = [];\n      \n      if (result?.analysis?.identifiedComponents && Array.isArray(result.analysis.identifiedComponents)) {\n        componentsToStore = result.analysis.identifiedComponents;\n      } else if (result?.analysis?.identifiedParts && Array.isArray(result.analysis.identifiedParts)) {\n        componentsToStore = result.analysis.identifiedParts;\n      }\n      \n      if (componentsToStore.length > 0) {\n        Logger.info('Found components to store', { count: componentsToStore.length });\n        storeIdentifiedComponents(componentsToStore);\n        \n        // Generate image for identified components\n        const componentNames = componentsToStore\n          .map(c => typeof c === 'string' ? c : c.name)\n          .filter(Boolean)\n          .join(', ');\n        \n        const prompt = `Create a detailed visualization of a drone with the following components: ${componentNames}`;\n        generateStableDiffusionImage(prompt);\n      }\n    }\n    \n    // Handle step completion\n    if (result?.analysis?.canProceed) {\n      const stepInfo = {\n        stepNumber: currentStep,\n        title: `Step ${currentStep} completed`,\n        timestamp: new Date().toISOString(),\n        details: result.analysis.feedback || 'Step completed successfully',\n      };\n      \n      // Generate visualization for completed step\n      const prompt = `Create a visualization of a drone after completing step ${currentStep}: ${stepInfo.details}`;\n      generateStableDiffusionImage(prompt);\n      \n      // Store the completed step\n      addCompletedStep(stepInfo);\n    }\n  };\n\n  // Store identified components\n  const storeIdentifiedComponents = async (components) => {\n    if (!components || !Array.isArray(components) || components.length === 0) return;\n    \n    try {\n      Logger.info('Storing identified components', { count: components.length });\n      await addComponents(components);\n    } catch (error) {\n      Logger.error('Error storing components', error);\n    }\n  };\n\n  const generateStableDiffusionImage = async (prompt) => {\n    try {\n      setIsGeneratingImage(true);\n      setImageGenerationError(null);\n      \n      const response = await fetch('http://localhost:9999/api/assembly/visualize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt,\n          userId: getUserId(),\n          projectId: getProjectId()\n        })\n      });\n  \n      if (!response.ok) {\n        throw new Error('Failed to generate image');\n      }\n  \n      const data = await response.json();\n      if (data.success) {\n        setGeneratedImage(data.image);\n      } else {\n        throw new Error(data.error || 'Image generation failed');\n      }\n    } catch (error) {\n      Logger.error('Error generating image:', error);\n      setImageGenerationError(error.message);\n    } finally {\n      setIsGeneratingImage(false);\n    }\n  };\n\n  const handleVoiceInput = async (transcript, statusCallback) => {\n    if (!cameraFeedRef.current) {\n      Logger.error('Camera feed not initialized');\n      statusCallback('Error: Camera not ready');\n      return;\n    }\n  \n    setAnalysisResult(null);\n    setIsProcessing(true);\n    Logger.info('Processing voice input:', transcript);\n    setProcessingStatus('Capturing image...');\n    \n    try {\n      const imageData = cameraFeedRef.current.captureFrame();\n      \n      if (!imageData) {\n        throw new Error('Failed to capture camera frame');\n      }\n      \n      Logger.info('Image captured successfully');\n      setProcessingStatus('Image captured ✅ Sending to API...');\n      statusCallback('Image captured ✅ Sending to API...');\n  \n      const userId = getUserId();\n      const projectId = getProjectId();\n      \n      Logger.info('Sending voice query to backend', {\n        step: currentStep,\n        query: transcript,\n        imageSize: imageData.length,\n        userId,\n        projectId,\n        requestId: Date.now().toString()\n      });\n      \n      const response = await fetch('http://localhost:5003/api/assembly/gemini/voice-query', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          image: imageData,\n          query: transcript,\n          currentStep,\n          userId,\n          projectId,\n          requestId: Date.now().toString()\n        })\n      });\n  \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n  \n      const data = await response.json();\n      Logger.info('Voice query response received', {\n        success: data.success,\n        status: data.analysis?.status,\n        hasContext: data.hasContext,\n        timestamp: new Date().toISOString()\n      });\n      \n      setProcessingStatus('Response received ✅');\n      statusCallback('Response received ✅');\n  \n      if (data.success) {\n        setAnalysisResult(data);\n        \n        // Handle identified components\n        if (data.analysis?.identifiedComponents?.length > 0) {\n          const componentNames = data.analysis.identifiedComponents\n            .map(c => typeof c === 'string' ? c : c.name)\n            .filter(Boolean)\n            .join(', ');\n          \n          const prompt = `Create a detailed visualization of a drone components: ${componentNames}`;\n          generateStableDiffusionImage(prompt);\n          storeIdentifiedComponents(data.analysis.identifiedComponents);\n        }\n        \n        // Process response for speech\n        const processedResponse = processGeminiResponse(data);\n        Logger.info('Processing voice response for speech:', {\n          text: processedResponse.slice(0, 100) + (processedResponse.length > 100 ? '...' : ''),\n          timestamp: new Date().toISOString()\n        });\n        \n        // Set speech text\n        if (cameraFeedRef.current?.setSpeechText) {\n          cameraFeedRef.current.setSpeechText('');\n          setTimeout(() => {\n            cameraFeedRef.current.setSpeechText(processedResponse);\n          }, 100);\n        }\n      } else {\n        throw new Error(data.error || 'Voice query failed');\n      }\n  \n    } catch (error) {\n      Logger.error('Voice query error:', error);\n      setProcessingStatus('Error processing request ❌');\n      statusCallback('Error processing request ❌');\n      setAnalysisResult(null);\n      \n      if (cameraFeedRef.current?.setSpeechText) {\n        cameraFeedRef.current.setSpeechText('I encountered an error processing your question. Please try again.');\n      }\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Handle project selection\n  const handleProjectSelect = (project) => {\n    setActiveProject(project);\n    setShowProjectManager(false);\n  };\n\n  // Handle onboarding completion\n  const handleOnboardingComplete = () => {\n    setShowOnboarding(false);\n    loadActiveProject();\n  };\n\n  // Toggle project manager\n  const toggleProjectManager = () => {\n    setShowProjectManager(!showProjectManager);\n  };\n\n  // Render content based on state\n  const renderContent = () => {\n    if (showOnboarding) {\n      return (\n        <div className=\"container mx-auto px-4 py-8\">\n          <NewUserOnboarding \n            onComplete={handleOnboardingComplete}\n            onGenerateImage={generateStableDiffusionImage} \n          />\n        </div>\n      );\n    }\n    \n    if (projectLoading) {\n      return (\n        <div className=\"container mx-auto px-4 py-8 flex items-center justify-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n        </div>\n      );\n    }\n    \n    return (\n      <main className=\"container mx-auto px-4 py-6\">\n        {showProjectManager ? (\n          <ProjectManager \n            onProjectSelect={handleProjectSelect}\n            onNewProject={handleProjectSelect}\n          />\n        ) : (\n          <div className=\"grid grid-cols-12 gap-6\">\n            <div className=\"col-span-12 lg:col-span-8\">\n              <CameraFeed \n                ref={cameraFeedRef}\n                currentStep={currentStep}\n                onAnalysisComplete={handleAnalysisComplete}\n              />\n              \n              {processingStatus && (\n                <div className=\"mt-4 bg-black/50 text-white p-4 rounded-xl\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div>\n                    <span>{processingStatus}</span>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className=\"col-span-12 lg:col-span-4 space-y-6\">\n              <InstructionPanel \n                currentStep={currentStep}\n                analysis={analysisResult?.analysis}\n                project={currentProject}\n              />\n              <VisualizationPanel \n                components={currentProject?.components || []}\n              />\n              <GeneratedImagePanel\n                image={generatedImage}\n                isLoading={isGeneratingImage}\n                error={imageGenerationError}\n                title=\"Drone Visualization\"\n              />\n            </div>\n          </div>\n        )}\n      </main>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-indigo-800\">\n      <header className=\"border-b border-white/10 backdrop-blur-md bg-black/20\">\n        <div className=\"container mx-auto px-4 py-3\">\n          <div className=\"flex items-center justify-between\">\n            <h1 className=\"text-2xl font-bold text-white\">\n              {currentProject?.project_name || 'Drone Assembly'}\n            </h1>\n            <div className=\"flex items-center gap-4\">\n              <button \n                onClick={toggleProjectManager}\n                className=\"text-indigo-200 hover:text-white transition-colors\"\n                title=\"Projects\"\n              >\n                <Folder className=\"w-6 h-6\" />\n              </button>\n              <button className=\"text-indigo-200 hover:text-white transition-colors\" title=\"History\">\n                <Clock className=\"w-6 h-6\" />\n              </button>\n              <button className=\"text-indigo-200 hover:text-white transition-colors\" title=\"Chat\">\n                <MessageSquare className=\"w-6 h-6\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n      \n      {renderContent()}\n\n      <div className=\"fixed bottom-6 right-6 flex flex-col gap-4\">\n        <VoiceInput \n          onVoiceInput={handleVoiceInput}\n          disabled={isProcessing || showProjectManager || showOnboarding}\n        />\n        <button \n          className=\"w-14 h-14 bg-indigo-600 hover:bg-indigo-700 rounded-full flex items-center justify-center text-white shadow-lg transition-colors\"\n          onClick={toggleProjectManager}\n          title={showProjectManager ? \"Back to Assembly\" : \"Switch Project\"}\n        >\n          <ArrowLeftRight className=\"w-6 h-6\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MainInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}