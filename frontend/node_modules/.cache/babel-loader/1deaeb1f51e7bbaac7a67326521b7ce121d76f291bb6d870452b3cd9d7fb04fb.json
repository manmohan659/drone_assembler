{"ast":null,"code":"// frontend/src/utils/logger.js - Enhanced with voice and image tracking\n\nconst Logger = {\n  info: (message, data = {}) => {\n    console.log(`[${new Date().toISOString()}] INFO:`, message, data);\n    Logger.storeLog('INFO', message, data);\n  },\n  error: (message, error = null) => {\n    console.error(`[${new Date().toISOString()}] ERROR:`, message, error);\n    Logger.storeLog('ERROR', message, error);\n  },\n  warn: (message, data = {}) => {\n    console.warn(`[${new Date().toISOString()}] WARN:`, message, data);\n    Logger.storeLog('WARN', message, data);\n  },\n  debug: (message, data = {}) => {\n    console.debug(`[${new Date().toISOString()}] DEBUG:`, message, data);\n    Logger.storeLog('DEBUG', message, data);\n  },\n  // Specialized logging methods for voice and image capture flow\n  voiceCapture: transcript => {\n    const logMessage = 'Voice input captured';\n    console.log(`[${new Date().toISOString()}] VOICE:`, logMessage, {\n      transcript\n    });\n    Logger.storeLog('VOICE', logMessage, {\n      transcript\n    });\n  },\n  imageCapture: imageSize => {\n    const logMessage = 'Image captured';\n    console.log(`[${new Date().toISOString()}] IMAGE:`, logMessage, {\n      size: imageSize\n    });\n    Logger.storeLog('IMAGE', logMessage, {\n      size: imageSize\n    });\n  },\n  apiRequest: (endpoint, payload) => {\n    const logMessage = `API request to ${endpoint}`;\n    // Don't log the full image data to console\n    const safePayload = {\n      ...payload\n    };\n    if (safePayload.image) {\n      safePayload.image = `[Image data: ${safePayload.image.length} chars]`;\n    }\n    console.log(`[${new Date().toISOString()}] API:`, logMessage, safePayload);\n    Logger.storeLog('API', logMessage, safePayload);\n  },\n  apiResponse: (endpoint, status, data) => {\n    const logMessage = `API response from ${endpoint}: ${status}`;\n    console.log(`[${new Date().toISOString()}] API:`, logMessage, data);\n    Logger.storeLog('API', logMessage, data);\n  },\n  // Store logs in localStorage for debugging\n  storeLog: (level, message, data) => {\n    try {\n      const MAX_LOGS = 100;\n      const logs = JSON.parse(localStorage.getItem('droneAssemblyLogs') || '[]');\n\n      // Create a safe copy of data to store\n      let safeData = data;\n      if (data && typeof data === 'object') {\n        safeData = {\n          ...data\n        };\n        // Don't store entire image data\n        if (safeData.image && typeof safeData.image === 'string' && safeData.image.length > 100) {\n          safeData.image = `[Image data: ${safeData.image.length} chars]`;\n        }\n      }\n      logs.push({\n        timestamp: new Date().toISOString(),\n        level,\n        message,\n        data: safeData\n      });\n\n      // Keep only recent logs\n      if (logs.length > MAX_LOGS) {\n        logs.splice(0, logs.length - MAX_LOGS);\n      }\n      localStorage.setItem('droneAssemblyLogs', JSON.stringify(logs));\n    } catch (error) {\n      console.error('Failed to store log:', error);\n    }\n  },\n  // Get all stored logs\n  getLogs: () => {\n    try {\n      return JSON.parse(localStorage.getItem('droneAssemblyLogs') || '[]');\n    } catch (error) {\n      console.error('Failed to retrieve logs:', error);\n      return [];\n    }\n  },\n  // Clear all stored logs\n  clearLogs: () => {\n    localStorage.removeItem('droneAssemblyLogs');\n    console.info('Logs cleared');\n  }\n};\nexport default Logger;","map":{"version":3,"names":["Logger","info","message","data","console","log","Date","toISOString","storeLog","error","warn","debug","voiceCapture","transcript","logMessage","imageCapture","imageSize","size","apiRequest","endpoint","payload","safePayload","image","length","apiResponse","status","level","MAX_LOGS","logs","JSON","parse","localStorage","getItem","safeData","push","timestamp","splice","setItem","stringify","getLogs","clearLogs","removeItem"],"sources":["/Users/single/Workspaces/drone_assembler/frontend/src/utils/logger.js"],"sourcesContent":["// frontend/src/utils/logger.js - Enhanced with voice and image tracking\n\nconst Logger = {\n  info: (message, data = {}) => {\n    console.log(`[${new Date().toISOString()}] INFO:`, message, data);\n    Logger.storeLog('INFO', message, data);\n  },\n  \n  error: (message, error = null) => {\n    console.error(`[${new Date().toISOString()}] ERROR:`, message, error);\n    Logger.storeLog('ERROR', message, error);\n  },\n  \n  warn: (message, data = {}) => {\n    console.warn(`[${new Date().toISOString()}] WARN:`, message, data);\n    Logger.storeLog('WARN', message, data);\n  },\n  \n  debug: (message, data = {}) => {\n    console.debug(`[${new Date().toISOString()}] DEBUG:`, message, data);\n    Logger.storeLog('DEBUG', message, data);\n  },\n  \n  // Specialized logging methods for voice and image capture flow\n  voiceCapture: (transcript) => {\n    const logMessage = 'Voice input captured';\n    console.log(`[${new Date().toISOString()}] VOICE:`, logMessage, { transcript });\n    Logger.storeLog('VOICE', logMessage, { transcript });\n  },\n  \n  imageCapture: (imageSize) => {\n    const logMessage = 'Image captured';\n    console.log(`[${new Date().toISOString()}] IMAGE:`, logMessage, { size: imageSize });\n    Logger.storeLog('IMAGE', logMessage, { size: imageSize });\n  },\n  \n  apiRequest: (endpoint, payload) => {\n    const logMessage = `API request to ${endpoint}`;\n    // Don't log the full image data to console\n    const safePayload = { ...payload };\n    if (safePayload.image) {\n      safePayload.image = `[Image data: ${safePayload.image.length} chars]`;\n    }\n    \n    console.log(`[${new Date().toISOString()}] API:`, logMessage, safePayload);\n    Logger.storeLog('API', logMessage, safePayload);\n  },\n  \n  apiResponse: (endpoint, status, data) => {\n    const logMessage = `API response from ${endpoint}: ${status}`;\n    console.log(`[${new Date().toISOString()}] API:`, logMessage, data);\n    Logger.storeLog('API', logMessage, data);\n  },\n  \n  // Store logs in localStorage for debugging\n  storeLog: (level, message, data) => {\n    try {\n      const MAX_LOGS = 100;\n      const logs = JSON.parse(localStorage.getItem('droneAssemblyLogs') || '[]');\n      \n      // Create a safe copy of data to store\n      let safeData = data;\n      if (data && typeof data === 'object') {\n        safeData = { ...data };\n        // Don't store entire image data\n        if (safeData.image && typeof safeData.image === 'string' && safeData.image.length > 100) {\n          safeData.image = `[Image data: ${safeData.image.length} chars]`;\n        }\n      }\n      \n      logs.push({\n        timestamp: new Date().toISOString(),\n        level,\n        message,\n        data: safeData\n      });\n      \n      // Keep only recent logs\n      if (logs.length > MAX_LOGS) {\n        logs.splice(0, logs.length - MAX_LOGS);\n      }\n      \n      localStorage.setItem('droneAssemblyLogs', JSON.stringify(logs));\n    } catch (error) {\n      console.error('Failed to store log:', error);\n    }\n  },\n  \n  // Get all stored logs\n  getLogs: () => {\n    try {\n      return JSON.parse(localStorage.getItem('droneAssemblyLogs') || '[]');\n    } catch (error) {\n      console.error('Failed to retrieve logs:', error);\n      return [];\n    }\n  },\n  \n  // Clear all stored logs\n  clearLogs: () => {\n    localStorage.removeItem('droneAssemblyLogs');\n    console.info('Logs cleared');\n  }\n};\n\nexport default Logger;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}